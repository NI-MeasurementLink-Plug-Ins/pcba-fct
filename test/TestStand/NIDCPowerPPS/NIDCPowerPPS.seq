<?xml version="1.0" encoding="UTF-8"?>
<teststandfileheader type='SequenceFile' fileversion='1022' productname='TestStand' productversion='2023 Q4 (23.0.0.49152)' compatibleversion='23.0.0.0' buildversion='23.0.0.49152' xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.ni.com/TestStand/23.0.0/SequenceFile">
	<typelist>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='1'>
			<Expression classname='ExprValue' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436'>
				<value/>
			</Expression>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='2'>
			<StepTypeMenu classname='Obj' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='24'>
				<subprops>
					<CanBeSubstepType classname='Bool'>
						<value>false</value>
					</CanBeSubstepType>
					<CanOnlyBeSubstepType classname='Bool'>
						<value>false</value>
					</CanOnlyBeSubstepType>
					<Category classname='Str'>
						<value>""</value>
					</Category>
					<ItemName typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value>""</value>
					</ItemName>
					<SingularItemName classname='Str'>
						<value>""</value>
					</SingularItemName>
					<SeparatorBeforeCategory classname='Bool'>
						<value>false</value>
					</SeparatorBeforeCategory>
					<SeparatorBeforeItemName classname='Bool'>
						<value>false</value>
					</SeparatorBeforeItemName>
					<Group classname='Str'>
						<value/>
					</Group>
				</subprops>
			</StepTypeMenu>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='3'>
			<StepTypeSubstepsArray classname='Objs' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' flagsforinstances='4718616' instanceoverrideflags='4849688' valueflags='24'>
				<value lbound='[0]' ubound='[]'/>
			</StepTypeSubstepsArray>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='4'>
			<NI_ArrayDimensions classname='ArrayDimensions' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<LowerBounds classname='Nums'>
						<value lbound='[0]' ubound='[]'/>
					</LowerBounds>
					<UpperBounds classname='Nums'>
						<value lbound='[0]' ubound='[]'/>
					</UpperBounds>
				</subprops>
			</NI_ArrayDimensions>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='5'>
			<NI_PropertyObjectType classname='PropertyObjectType' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<ValueType classname='Num'>
						<value>3</value>
					</ValueType>
					<IsObject classname='Bool'>
						<value>true</value>
					</IsObject>
					<TypeName classname='Str'>
						<value/>
					</TypeName>
					<ElementType classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</ElementType>
					<ArrayDimensions typename='NI_ArrayDimensions' xsi:type='NI_ArrayDimensions' classname='ArrayDimensions'>
						<subprops>
							<LowerBounds classname='Nums'>
								<value lbound='[0]' ubound='[]'/>
							</LowerBounds>
							<UpperBounds classname='Nums'>
								<value lbound='[0]' ubound='[]'/>
							</UpperBounds>
						</subprops>
					</ArrayDimensions>
					<Representation classname='Num'>
						<value>1</value>
					</Representation>
					<ClassName classname='Str'>
						<value/>
					</ClassName>
				</subprops>
			</NI_PropertyObjectType>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='6'>
			<NI_CustomResult classname='CustomResult' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Name typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Name>
					<ValueToLog typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ValueToLog>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>2</value>
					</CheckedState>
					<Type typename='NI_PropertyObjectType' xsi:type='NI_PropertyObjectType' classname='PropertyObjectType'>
						<subprops>
							<ValueType classname='Num'>
								<value>3</value>
							</ValueType>
							<IsObject classname='Bool'>
								<value>true</value>
							</IsObject>
							<TypeName classname='Str'>
								<value/>
							</TypeName>
							<ElementType classname='Objs'>
								<value lbound='[0]' ubound='[]'/>
							</ElementType>
							<ArrayDimensions classname='ArrayDimensions'>
								<subprops>
									<LowerBounds classname='Nums'>
										<value lbound='[0]' ubound='[]'/>
									</LowerBounds>
									<UpperBounds classname='Nums'>
										<value lbound='[0]' ubound='[]'/>
									</UpperBounds>
								</subprops>
							</ArrayDimensions>
							<Representation classname='Num'>
								<value>1</value>
							</Representation>
							<ClassName classname='Str'>
								<value/>
							</ClassName>
						</subprops>
					</Type>
					<Elements classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</Elements>
					<IsAnyType classname='Bool'>
						<value>true</value>
					</IsAnyType>
				</subprops>
			</NI_CustomResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='7'>
			<TEInf classname='Obj' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' flagsforinstances='4456472' instanceoverrideflags='4456472' valueflags='24'>
				<subprops>
					<Id classname='Str' flagsforinstances='1' instanceoverrideflags='5046297'>
						<value/>
					</Id>
					<Icon classname='Str' instanceoverrideflags='5046296'>
						<value/>
					</Icon>
					<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7143448' structureflags='2097152'/>
					<PreCond typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PreCond>
					<LoadOpt classname='Str' instanceoverrideflags='5046296'>
						<value>PreloadWhenExecuted</value>
					</LoadOpt>
					<UnloadOpt classname='Str' instanceoverrideflags='5046296'>
						<value>UnloadWithFile</value>
					</UnloadOpt>
					<Mode classname='Str' instanceoverrideflags='5046296'>
						<value>Normal</value>
					</Mode>
					<WindowActivation classname='Str' instanceoverrideflags='5046296'>
						<value>None</value>
					</WindowActivation>
					<ResultOption classname='Num' instanceoverrideflags='5046296'>
						<value>1</value>
					</ResultOption>
					<StepFCSeqF classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</StepFCSeqF>
					<IgnoreRTE classname='Bool' instanceoverrideflags='5046296'>
						<value>false</value>
					</IgnoreRTE>
					<UseMutex classname='Bool' instanceoverrideflags='5046296'>
						<value>false</value>
					</UseMutex>
					<MutexNameOrRef typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</MutexNameOrRef>
					<BatchSyncOpt classname='Num' instanceoverrideflags='5046296'>
						<value>0</value>
					</BatchSyncOpt>
					<SwitchEnabled classname='Bool' instanceoverrideflags='5046296'>
						<value>false</value>
					</SwitchEnabled>
					<VirtualDeviceName typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</VirtualDeviceName>
					<SwitchOperation classname='Num' instanceoverrideflags='5046296'>
						<value>1</value>
					</SwitchOperation>
					<RouteGroupConnect typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</RouteGroupConnect>
					<RouteGroupDisconnect typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</RouteGroupDisconnect>
					<MulticonnectMode classname='Num' instanceoverrideflags='5046296'>
						<value>1</value>
					</MulticonnectMode>
					<OperationOrder classname='Num' instanceoverrideflags='5046296'>
						<value>2</value>
					</OperationOrder>
					<ConnectionLifetime classname='Num' instanceoverrideflags='5046296'>
						<value>4</value>
					</ConnectionLifetime>
					<WaitForDebounce classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</WaitForDebounce>
					<PassAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</PassAct>
					<FailAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</FailAct>
					<PassActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PassActTarget>
					<FailActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</FailActTarget>
					<CustExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</CustExpr>
					<CustTrueAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</CustTrueAct>
					<CustFalseAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</CustFalseAct>
					<CustTrueActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</CustTrueActTarget>
					<CustFalseActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</CustFalseActTarget>
					<LoopType classname='Str' instanceoverrideflags='5046296'>
						<value>NoLooping</value>
					</LoopType>
					<LoopWhile typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</LoopWhile>
					<LoopStatus typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</LoopStatus>
					<LoopIncrement typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value>RunState.LoopIndex += 1</value>
					</LoopIncrement>
					<LoopInitialize typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value>RunState.LoopIndex = 0</value>
					</LoopInitialize>
					<LoopOpt classname='Num' instanceoverrideflags='5046296'>
						<value>0</value>
					</LoopOpt>
					<PreExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PreExpr>
					<PostExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PostExpr>
					<StatusExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</StatusExpr>
					<CanSpecifyModule classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanSpecifyModule>
					<CanEditCode classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanEditCode>
					<CanEditModulePrototype classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanEditModulePrototype>
					<CanEditParameterAdditionalResults classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanEditParameterAdditionalResults>
					<PrecondIntExe classname='Num' instanceoverrideflags='5046296'>
						<value>0</value>
					</PrecondIntExe>
					<Requirements classname='Obj' flagsforinstances='2097153' instanceoverrideflags='7143449' valueflags='1' structureflags='2097152'>
						<subprops>
							<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
								<value lbound='[0]' ubound='[]'/>
							</Links>
						</subprops>
					</Requirements>
					<CustomResults classname='Objs' instanceoverrideflags='5046296'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</CustomResults>
					<AdditionalResultsHints classname='Objs' instanceoverrideflags='5046296'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
				</subprops>
			</TEInf>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='8'>
			<StepTypeNIData classname='Obj' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='24'>
				<subprops>
					<EditPanels classname='Strs'>
						<value lbound='[0]' ubound='[]'/>
					</EditPanels>
				</subprops>
			</StepTypeNIData>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='9'>
			<Error classname='Obj' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436'>
				<extdata controllername='STRUCT' allowstructpassing='true' packingoption='8' exclude='false' type='0' arraystorage='0' strbuffersize='256' strstorage='0'/>
				<extdata controllername='CLUST' allowclusterpassing='true' exclude='false' memberlabel=''/>
				<extdata controllername='DNSTRUCT' allowstructpassing='true' exclude='false' membername=''/>
				<extdata controllername='BLVCLUSTER' allowclusterpassing='true' exclude='false' memberlabel=''/>
				<subprops>
					<Code classname='Num' flagsforinstances='4194304' valueflags='4194304'>
						<value>0</value>
						<extdata controllername='STRUCT' allowstructpassing='false' packingoption='0' exclude='false' type='6' arraystorage='0' strbuffersize='256' strstorage='0'/>
						<extdata controllername='CLUST' allowclusterpassing='false' exclude='false' memberlabel='code'/>
						<extdata controllername='DNSTRUCT' allowstructpassing='false' exclude='false' membername='code'/>
						<extdata controllername='BLVCLUSTER' allowclusterpassing='false' exclude='false' memberlabel='code'/>
					</Code>
					<Msg classname='Str' flagsforinstances='4194304' valueflags='4194304'>
						<value/>
						<extdata controllername='STRUCT' allowstructpassing='false' packingoption='0' exclude='false' type='2' arraystorage='0' strbuffersize='1024' strstorage='1'/>
						<extdata controllername='CLUST' allowclusterpassing='false' exclude='false' memberlabel='source'/>
						<extdata controllername='DNSTRUCT' allowstructpassing='false' exclude='false' membername='msg'/>
						<extdata controllername='BLVCLUSTER' allowclusterpassing='false' exclude='false' memberlabel='source'/>
					</Msg>
					<Occurred classname='Bool' flagsforinstances='4194304' valueflags='4194304'>
						<value>false</value>
						<extdata controllername='STRUCT' allowstructpassing='false' packingoption='0' exclude='false' type='6' arraystorage='0' strbuffersize='256' strstorage='0'/>
						<extdata controllername='CLUST' allowclusterpassing='false' exclude='false' memberlabel='status'/>
						<extdata controllername='DNSTRUCT' allowstructpassing='false' exclude='false' membername='occurred'/>
						<extdata controllername='BLVCLUSTER' allowclusterpassing='false' exclude='false' memberlabel='status'/>
					</Occurred>
				</subprops>
			</Error>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='10'>
			<CommonResults classname='Obj' isroottypedef='true' typecategory='3' timestamp='1465572565' typeversion='3.1.0.100' typelastmodversion='23.0.0.49152' typeminprodversion='3.1.0.0' typeflags='33554432' flagsforinstances='4194304' valueflags='4194304'/>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='11'>
			<Substep classname='StepType' isroottypedef='true' typecategory='1' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554438' flagsforinstances='4194304' instanceoverrideflags='4194304'>
				<subprops>
					<DescriptionFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>"%ModuleDescription"</value>
					</DescriptionFormat>
					<DefaultNameFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "GENERIC_DEF_SUBSTEP_NAME")</value>
					</DefaultNameFormat>
					<BlockStartTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockStartTypes>
					<BlockEndTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockEndTypes>
					<AppliesToBlockStructure classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</AppliesToBlockStructure>
					<Menu typename='StepTypeMenu' xsi:type='StepTypeMenu' classname='Obj'>
						<subprops>
							<CanBeSubstepType classname='Bool'>
								<value>true</value>
							</CanBeSubstepType>
							<CanOnlyBeSubstepType classname='Bool'>
								<value>true</value>
							</CanOnlyBeSubstepType>
							<Category classname='Str'>
								<value>""</value>
							</Category>
							<ItemName classname='ExprValue'>
								<value>ResStr("NI_STEPTYPES", "GENERIC_SUBSTEP_MENU_ITEM_NAME")</value>
							</ItemName>
							<SingularItemName classname='Str'>
								<value>""</value>
							</SingularItemName>
							<SeparatorBeforeCategory classname='Bool'>
								<value>false</value>
							</SeparatorBeforeCategory>
							<SeparatorBeforeItemName classname='Bool'>
								<value>false</value>
							</SeparatorBeforeItemName>
							<Group classname='Str'>
								<value>GenericSubsteps</value>
							</Group>
						</subprops>
					</Menu>
					<Substeps typename='StepTypeSubstepsArray' xsi:type='StepTypeSubstepsArray' classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</Substeps>
					<CodeTemplates classname='Str' valueflags='4194328' structureflags='524288'>
						<value>DefaultLabVIEWNXG|DefaultLabVIEW|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultHTB72_Template|DefaultHTB80_Template|Default_Template</value>
					</CodeTemplates>
					<AdditionalResultsHints classname='Objs' valueflags='4194328' structureflags='524288'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
					<TS typename='TEInf' xsi:type='TEInf' classname='Obj' flagsforinstances='4456472'>
						<subprops>
							<Id classname='Str'>
								<value/>
							</Id>
							<Icon classname='Str'>
								<value/>
							</Icon>
							<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7274521' structureflags='2097152'/>
							<PreCond classname='ExprValue'>
								<value/>
							</PreCond>
							<LoadOpt classname='Str'>
								<value>PreloadWhenExecuted</value>
							</LoadOpt>
							<UnloadOpt classname='Str'>
								<value>UnloadWithFile</value>
							</UnloadOpt>
							<Mode classname='Str'>
								<value>Normal</value>
							</Mode>
							<WindowActivation classname='Str'>
								<value>None</value>
							</WindowActivation>
							<ResultOption classname='Num'>
								<value>1</value>
							</ResultOption>
							<StepFCSeqF classname='Bool'>
								<value>true</value>
							</StepFCSeqF>
							<IgnoreRTE classname='Bool'>
								<value>false</value>
							</IgnoreRTE>
							<UseMutex classname='Bool'>
								<value>false</value>
							</UseMutex>
							<MutexNameOrRef classname='ExprValue'>
								<value/>
							</MutexNameOrRef>
							<BatchSyncOpt classname='Num'>
								<value>0</value>
							</BatchSyncOpt>
							<SwitchEnabled classname='Bool'>
								<value>false</value>
							</SwitchEnabled>
							<VirtualDeviceName classname='ExprValue'>
								<value/>
							</VirtualDeviceName>
							<SwitchOperation classname='Num'>
								<value>1</value>
							</SwitchOperation>
							<RouteGroupConnect classname='ExprValue'>
								<value/>
							</RouteGroupConnect>
							<RouteGroupDisconnect classname='ExprValue'>
								<value/>
							</RouteGroupDisconnect>
							<MulticonnectMode classname='Num'>
								<value>1</value>
							</MulticonnectMode>
							<OperationOrder classname='Num'>
								<value>2</value>
							</OperationOrder>
							<ConnectionLifetime classname='Num'>
								<value>4</value>
							</ConnectionLifetime>
							<WaitForDebounce classname='Bool'>
								<value>true</value>
							</WaitForDebounce>
							<PassAct classname='Str'>
								<value>Next</value>
							</PassAct>
							<FailAct classname='Str'>
								<value>Next</value>
							</FailAct>
							<PassActTarget classname='ExprValue'>
								<value/>
							</PassActTarget>
							<FailActTarget classname='ExprValue'>
								<value/>
							</FailActTarget>
							<CustExpr classname='ExprValue'>
								<value/>
							</CustExpr>
							<CustTrueAct classname='Str'>
								<value>Next</value>
							</CustTrueAct>
							<CustFalseAct classname='Str'>
								<value>Next</value>
							</CustFalseAct>
							<CustTrueActTarget classname='ExprValue'>
								<value/>
							</CustTrueActTarget>
							<CustFalseActTarget classname='ExprValue'>
								<value/>
							</CustFalseActTarget>
							<LoopType classname='Str'>
								<value>NoLooping</value>
							</LoopType>
							<LoopWhile classname='ExprValue'>
								<value/>
							</LoopWhile>
							<LoopStatus classname='ExprValue'>
								<value/>
							</LoopStatus>
							<LoopIncrement classname='ExprValue'>
								<value>RunState.LoopIndex += 1</value>
							</LoopIncrement>
							<LoopInitialize classname='ExprValue'>
								<value>RunState.LoopIndex = 0</value>
							</LoopInitialize>
							<LoopOpt classname='Num'>
								<value>0</value>
							</LoopOpt>
							<PreExpr classname='ExprValue'>
								<value/>
							</PreExpr>
							<PostExpr classname='ExprValue'>
								<value/>
							</PostExpr>
							<StatusExpr classname='ExprValue'>
								<value/>
							</StatusExpr>
							<CanSpecifyModule classname='Bool'>
								<value>true</value>
							</CanSpecifyModule>
							<CanEditCode classname='Bool'>
								<value>true</value>
							</CanEditCode>
							<CanEditModulePrototype classname='Bool'>
								<value>true</value>
							</CanEditModulePrototype>
							<CanEditParameterAdditionalResults classname='Bool'>
								<value>true</value>
							</CanEditParameterAdditionalResults>
							<PrecondIntExe classname='Num'>
								<value>0</value>
							</PrecondIntExe>
							<Requirements classname='Obj' flagsforinstances='1' valueflags='1' structureflags='2097152'>
								<subprops>
									<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
										<value lbound='[0]' ubound='[]'/>
									</Links>
								</subprops>
							</Requirements>
							<CustomResults classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</CustomResults>
							<AdditionalResultsHints classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</AdditionalResultsHints>
						</subprops>
					</TS>
					<NI_Data typename='StepTypeNIData' xsi:type='StepTypeNIData' classname='Obj'>
						<subprops>
							<EditPanels classname='Strs'>
								<value lbound='[0]' ubound='[]'/>
							</EditPanels>
						</subprops>
					</NI_Data>
					<Result classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
						<subprops>
							<Error typename='Error' xsi:type='Error' classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
								<subprops>
									<Code classname='Num'>
										<value>0</value>
									</Code>
									<Msg classname='Str'>
										<value/>
									</Msg>
									<Occurred classname='Bool'>
										<value>false</value>
									</Occurred>
								</subprops>
							</Error>
							<Status classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</Status>
							<ReportText classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</ReportText>
							<Common typename='CommonResults' xsi:type='CommonResults' classname='Obj'/>
						</subprops>
					</Result>
					<CanEncapsulate classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</CanEncapsulate>
				</subprops>
			</Substep>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='12'>
			<NI_DotNetParameterResult classname='DotNetParameterResult' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>1</value>
					</CheckedState>
				</subprops>
			</NI_DotNetParameterResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='13'>
			<DotNetParameter classname='DotNetParameter' isroottypedef='true' typecategory='3' timestamp='1695827756' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Name classname='Str'>
						<value>_notNamed</value>
					</Name>
					<ArgVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgVal>
					<ArgDisplayVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgDisplayVal>
					<Type classname='Num'>
						<value>0</value>
					</Type>
					<TypeName classname='Str'>
						<value/>
					</TypeName>
					<Flags classname='Num'>
						<value>0</value>
					</Flags>
					<IsOptional classname='Bool'>
						<value>false</value>
					</IsOptional>
					<CallDispose classname='Bool'>
						<value>false</value>
					</CallDispose>
					<NumDimensions classname='Nums'>
						<value lbound='[0]' ubound='[]'/>
					</NumDimensions>
					<MultiElement classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</MultiElement>
					<AdditionalResults classname='Obj'>
						<subprops>
							<Input typename='NI_DotNetParameterResult' xsi:type='NI_DotNetParameterResult' classname='DotNetParameterResult'>
								<subprops>
									<Condition classname='ExprValue'>
										<value/>
									</Condition>
									<Flags classname='Num'>
										<value>8192</value>
									</Flags>
									<CheckedState classname='Num'>
										<value>1</value>
									</CheckedState>
								</subprops>
							</Input>
							<Output typename='NI_DotNetParameterResult' xsi:type='NI_DotNetParameterResult' classname='DotNetParameterResult'>
								<subprops>
									<Condition classname='ExprValue'>
										<value/>
									</Condition>
									<Flags classname='Num'>
										<value>8192</value>
									</Flags>
									<CheckedState classname='Num'>
										<value>1</value>
									</CheckedState>
								</subprops>
							</Output>
						</subprops>
					</AdditionalResults>
					<UserData classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
				</subprops>
			</DotNetParameter>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='14'>
			<NI_DotNetCallResult classname='DotNetCallResult' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>1</value>
					</CheckedState>
				</subprops>
			</NI_DotNetCallResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='15'>
			<DotNetCall classname='DotNetCall' isroottypedef='true' typecategory='3' timestamp='1695827756' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<ClassName classname='Str'>
						<value/>
					</ClassName>
					<MemberType classname='Num'>
						<value>0</value>
					</MemberType>
					<Static classname='Bool'>
						<value>false</value>
					</Static>
					<MemberName classname='Str'>
						<value/>
					</MemberName>
					<Params classname='Objs'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='DotNetParameter' xsi:type='DotNetParameter' name='' classname='DotNetParameter' structureflags='131072'>
									<subprops>
										<Name classname='Str'>
											<value>_notNamed</value>
										</Name>
										<ArgVal classname='ExprValue'>
											<value/>
										</ArgVal>
										<ArgDisplayVal classname='ExprValue'>
											<value/>
										</ArgDisplayVal>
										<Type classname='Num'>
											<value>0</value>
										</Type>
										<TypeName classname='Str'>
											<value/>
										</TypeName>
										<Flags classname='Num'>
											<value>0</value>
										</Flags>
										<IsOptional classname='Bool'>
											<value>false</value>
										</IsOptional>
										<CallDispose classname='Bool'>
											<value>false</value>
										</CallDispose>
										<NumDimensions classname='Nums'>
											<value lbound='[0]' ubound='[]'/>
										</NumDimensions>
										<MultiElement classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</MultiElement>
										<AdditionalResults classname='Obj'>
											<subprops>
												<Input classname='DotNetParameterResult'>
													<subprops>
														<Condition classname='ExprValue'>
															<value/>
														</Condition>
														<Flags classname='Num'>
															<value>8192</value>
														</Flags>
														<CheckedState classname='Num'>
															<value>1</value>
														</CheckedState>
													</subprops>
												</Input>
												<Output classname='DotNetParameterResult'>
													<subprops>
														<Condition classname='ExprValue'>
															<value/>
														</Condition>
														<Flags classname='Num'>
															<value>8192</value>
														</Flags>
														<CheckedState classname='Num'>
															<value>1</value>
														</CheckedState>
													</subprops>
												</Output>
											</subprops>
										</AdditionalResults>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</Params>
					<AdditionalResult typename='NI_DotNetCallResult' xsi:type='NI_DotNetCallResult' classname='DotNetCallResult'>
						<subprops>
							<Condition classname='ExprValue'>
								<value/>
							</Condition>
							<Flags classname='Num'>
								<value>8192</value>
							</Flags>
							<CheckedState classname='Num'>
								<value>1</value>
							</CheckedState>
						</subprops>
					</AdditionalResult>
				</subprops>
			</DotNetCall>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='0'>
			<Path classname='PathValue' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436'>
				<value/>
			</Path>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='16'>
			<DotNetStepAdditions classname='DotNetModule' isroottypedef='true' typecategory='3' timestamp='1695827756' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Calls classname='Objs'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='DotNetCall' xsi:type='DotNetCall' name='' classname='DotNetCall' structureflags='131072'>
									<subprops>
										<ClassName classname='Str'>
											<value/>
										</ClassName>
										<MemberType classname='Num'>
											<value>0</value>
										</MemberType>
										<Static classname='Bool'>
											<value>false</value>
										</Static>
										<MemberName classname='Str'>
											<value/>
										</MemberName>
										<Params classname='Objs'>
											<value lbound='[0]' ubound='[]'>
												<elemproto>
													<_NAME_IN_ATTRIBUTE_ name='' classname='DotNetParameter' structureflags='0'/>
												</elemproto>
											</value>
										</Params>
										<AdditionalResult classname='DotNetCallResult'>
											<subprops>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>1</value>
												</CheckedState>
											</subprops>
										</AdditionalResult>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</Calls>
					<AssemblyPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</AssemblyPath>
					<AssemblyStrongName classname='Str'>
						<value/>
					</AssemblyStrongName>
					<AssemblyLocation classname='Num'>
						<value>0</value>
					</AssemblyLocation>
					<ClassName classname='Str'>
						<value/>
					</ClassName>
					<IsStruct classname='Bool'>
						<value>false</value>
					</IsStruct>
					<StructDef typename='DotNetParameter' xsi:type='DotNetParameter' classname='DotNetParameter'>
						<subprops>
							<Name classname='Str'>
								<value>_notNamed</value>
							</Name>
							<ArgVal classname='ExprValue'>
								<value/>
							</ArgVal>
							<ArgDisplayVal classname='ExprValue'>
								<value/>
							</ArgDisplayVal>
							<Type classname='Num'>
								<value>0</value>
							</Type>
							<TypeName classname='Str'>
								<value/>
							</TypeName>
							<Flags classname='Num'>
								<value>0</value>
							</Flags>
							<IsOptional classname='Bool'>
								<value>false</value>
							</IsOptional>
							<CallDispose classname='Bool'>
								<value>false</value>
							</CallDispose>
							<NumDimensions classname='Nums'>
								<value lbound='[0]' ubound='[]'/>
							</NumDimensions>
							<MultiElement classname='Objs'>
								<value lbound='[0]' ubound='[]'/>
							</MultiElement>
							<AdditionalResults classname='Obj'>
								<subprops>
									<Input classname='DotNetParameterResult'>
										<subprops>
											<Condition classname='ExprValue'>
												<value/>
											</Condition>
											<Flags classname='Num'>
												<value>8192</value>
											</Flags>
											<CheckedState classname='Num'>
												<value>1</value>
											</CheckedState>
										</subprops>
									</Input>
									<Output classname='DotNetParameterResult'>
										<subprops>
											<Condition classname='ExprValue'>
												<value/>
											</Condition>
											<Flags classname='Num'>
												<value>8192</value>
											</Flags>
											<CheckedState classname='Num'>
												<value>1</value>
											</CheckedState>
										</subprops>
									</Output>
								</subprops>
							</AdditionalResults>
						</subprops>
					</StructDef>
					<RemoteSpecifiedByExpr classname='Bool'>
						<value>false</value>
					</RemoteSpecifiedByExpr>
					<UseLoadSpec classname='Bool'>
						<value>false</value>
					</UseLoadSpec>
					<ModuleSrcPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</ModuleSrcPath>
					<ModulePrjPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</ModulePrjPath>
					<ModuleSlnPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</ModuleSlnPath>
					<FunctionName classname='Str'>
						<value/>
					</FunctionName>
				</subprops>
			</DotNetStepAdditions>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='17'>
			<PostSubstep classname='StepType' isroottypedef='true' typecategory='1' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554438' flagsforinstances='4194304' instanceoverrideflags='4194304'>
				<subprops>
					<DescriptionFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>"%ModuleDescription"</value>
					</DescriptionFormat>
					<DefaultNameFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "POST_DEF_SUBSTEP_NAME")</value>
					</DefaultNameFormat>
					<BlockStartTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockStartTypes>
					<BlockEndTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockEndTypes>
					<AppliesToBlockStructure classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</AppliesToBlockStructure>
					<Menu typename='StepTypeMenu' xsi:type='StepTypeMenu' classname='Obj'>
						<subprops>
							<CanBeSubstepType classname='Bool'>
								<value>true</value>
							</CanBeSubstepType>
							<CanOnlyBeSubstepType classname='Bool'>
								<value>true</value>
							</CanOnlyBeSubstepType>
							<Category classname='Str'>
								<value>""</value>
							</Category>
							<ItemName classname='ExprValue'>
								<value>ResStr("NI_STEPTYPES", "POST_SUBSTEP_MENU_ITEM_NAME")</value>
							</ItemName>
							<SingularItemName classname='Str'>
								<value>""</value>
							</SingularItemName>
							<SeparatorBeforeCategory classname='Bool'>
								<value>false</value>
							</SeparatorBeforeCategory>
							<SeparatorBeforeItemName classname='Bool'>
								<value>false</value>
							</SeparatorBeforeItemName>
							<Group classname='Str'>
								<value>ExecSubsteps</value>
							</Group>
						</subprops>
					</Menu>
					<Substeps typename='StepTypeSubstepsArray' xsi:type='StepTypeSubstepsArray' classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</Substeps>
					<CodeTemplates classname='Str' valueflags='4194328' structureflags='524288'>
						<value>DefaultLabVIEWNXG|DefaultLabVIEW|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultHTB72_Template|DefaultHTB80_Template|Default_Template</value>
					</CodeTemplates>
					<AdditionalResultsHints classname='Objs' valueflags='4194328' structureflags='524288'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
					<TS typename='TEInf' xsi:type='TEInf' classname='Obj' flagsforinstances='4456472'>
						<subprops>
							<Id classname='Str'>
								<value/>
							</Id>
							<Icon classname='Str'>
								<value/>
							</Icon>
							<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7274521' structureflags='2097152'/>
							<PreCond classname='ExprValue'>
								<value/>
							</PreCond>
							<LoadOpt classname='Str'>
								<value>PreloadWhenExecuted</value>
							</LoadOpt>
							<UnloadOpt classname='Str'>
								<value>UnloadWithFile</value>
							</UnloadOpt>
							<Mode classname='Str'>
								<value>Normal</value>
							</Mode>
							<WindowActivation classname='Str'>
								<value>None</value>
							</WindowActivation>
							<ResultOption classname='Num'>
								<value>1</value>
							</ResultOption>
							<StepFCSeqF classname='Bool'>
								<value>true</value>
							</StepFCSeqF>
							<IgnoreRTE classname='Bool'>
								<value>false</value>
							</IgnoreRTE>
							<UseMutex classname='Bool'>
								<value>false</value>
							</UseMutex>
							<MutexNameOrRef classname='ExprValue'>
								<value/>
							</MutexNameOrRef>
							<BatchSyncOpt classname='Num'>
								<value>0</value>
							</BatchSyncOpt>
							<SwitchEnabled classname='Bool'>
								<value>false</value>
							</SwitchEnabled>
							<VirtualDeviceName classname='ExprValue'>
								<value/>
							</VirtualDeviceName>
							<SwitchOperation classname='Num'>
								<value>1</value>
							</SwitchOperation>
							<RouteGroupConnect classname='ExprValue'>
								<value/>
							</RouteGroupConnect>
							<RouteGroupDisconnect classname='ExprValue'>
								<value/>
							</RouteGroupDisconnect>
							<MulticonnectMode classname='Num'>
								<value>1</value>
							</MulticonnectMode>
							<OperationOrder classname='Num'>
								<value>2</value>
							</OperationOrder>
							<ConnectionLifetime classname='Num'>
								<value>4</value>
							</ConnectionLifetime>
							<WaitForDebounce classname='Bool'>
								<value>true</value>
							</WaitForDebounce>
							<PassAct classname='Str'>
								<value>Next</value>
							</PassAct>
							<FailAct classname='Str'>
								<value>Next</value>
							</FailAct>
							<PassActTarget classname='ExprValue'>
								<value/>
							</PassActTarget>
							<FailActTarget classname='ExprValue'>
								<value/>
							</FailActTarget>
							<CustExpr classname='ExprValue'>
								<value/>
							</CustExpr>
							<CustTrueAct classname='Str'>
								<value>Next</value>
							</CustTrueAct>
							<CustFalseAct classname='Str'>
								<value>Next</value>
							</CustFalseAct>
							<CustTrueActTarget classname='ExprValue'>
								<value/>
							</CustTrueActTarget>
							<CustFalseActTarget classname='ExprValue'>
								<value/>
							</CustFalseActTarget>
							<LoopType classname='Str'>
								<value>NoLooping</value>
							</LoopType>
							<LoopWhile classname='ExprValue'>
								<value/>
							</LoopWhile>
							<LoopStatus classname='ExprValue'>
								<value/>
							</LoopStatus>
							<LoopIncrement classname='ExprValue'>
								<value>RunState.LoopIndex += 1</value>
							</LoopIncrement>
							<LoopInitialize classname='ExprValue'>
								<value>RunState.LoopIndex = 0</value>
							</LoopInitialize>
							<LoopOpt classname='Num'>
								<value>0</value>
							</LoopOpt>
							<PreExpr classname='ExprValue'>
								<value/>
							</PreExpr>
							<PostExpr classname='ExprValue'>
								<value/>
							</PostExpr>
							<StatusExpr classname='ExprValue'>
								<value/>
							</StatusExpr>
							<CanSpecifyModule classname='Bool'>
								<value>true</value>
							</CanSpecifyModule>
							<CanEditCode classname='Bool'>
								<value>true</value>
							</CanEditCode>
							<CanEditModulePrototype classname='Bool'>
								<value>true</value>
							</CanEditModulePrototype>
							<CanEditParameterAdditionalResults classname='Bool'>
								<value>true</value>
							</CanEditParameterAdditionalResults>
							<PrecondIntExe classname='Num'>
								<value>0</value>
							</PrecondIntExe>
							<Requirements classname='Obj' flagsforinstances='1' valueflags='1' structureflags='2097152'>
								<subprops>
									<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
										<value lbound='[0]' ubound='[]'/>
									</Links>
								</subprops>
							</Requirements>
							<CustomResults classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</CustomResults>
							<AdditionalResultsHints classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</AdditionalResultsHints>
						</subprops>
					</TS>
					<NI_Data typename='StepTypeNIData' xsi:type='StepTypeNIData' classname='Obj'>
						<subprops>
							<EditPanels classname='Strs'>
								<value lbound='[0]' ubound='[]'/>
							</EditPanels>
						</subprops>
					</NI_Data>
					<Result classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
						<subprops>
							<Error typename='Error' xsi:type='Error' classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
								<subprops>
									<Code classname='Num'>
										<value>0</value>
									</Code>
									<Msg classname='Str'>
										<value/>
									</Msg>
									<Occurred classname='Bool'>
										<value>false</value>
									</Occurred>
								</subprops>
							</Error>
							<Status classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</Status>
							<ReportText classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</ReportText>
							<Common typename='CommonResults' xsi:type='CommonResults' classname='Obj'/>
						</subprops>
					</Result>
					<CanEncapsulate classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</CanEncapsulate>
				</subprops>
			</PostSubstep>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='18'>
			<NoneStepAdditions classname='NoneModule' isroottypedef='true' typecategory='3' timestamp='1695827487' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'/>
		</typedef>
		<protected>E@=3HJL4100hYLEDF=_K@0@mKCYo_1KN2&lt;dfASB`]CF^aUXa]Y\4WmD]203VfR;kS;KgdGgF285WU]RaSJgcjNlM7MFC4LiX=a48\7dW:L403mZ4BUAT82I&gt;KQH8\T8QFE`DA2\LAVbMD5YRMT13fTiE^i&lt;boIle7[=C_LeZbKM2QXhVTH;?4hTX]A[17:2T;Dh\^Co3kY9PA5QK23^C]l262h09La1?5^k3J0BQZ@@EeDRZTO=\cKd?XKjmGb1N\X&lt;J[IS9OXJj22Qc=R\WEEn\IKCaHCAUNi97;EVjaJCX4&gt;UU36B3oib::mkjjIJFOY^^C_gK;?Ngamc6b1^HOM^Rl@oHoiaG802US0o36;lHiif[]oe&lt;FRliGlo^CMk69OeFDNDnIQUXNS=iA3JmW&lt;KbcFOCL6bWF;DdY7d2\SSH4mB7[^9gAb5EgM5G;l^DR5mXURj&lt;_=4b_aTDS965fd7ACLdkeA7kamDL&gt;;lWi[PA07_B@&gt;cR[mGK`_XMGdK4NmjkVR8?micjQcMS=oX^9@cW^5\93S[[2ZkFbBiZ=Q@AM0FkKdo:gUd&lt;lVVcfi&gt;bV3&gt;kl[1UR_FW&gt;JkW]_EREPX34oO2LYb;J&gt;k9nWLWBEg6Tk&gt;koggGTQ&gt;kL6kJL@dKQ2_E0Z</protected>
		<protected>E@=3HJB4110h]L]Mg[cK3fBoj\Kifo1C[KY_3VgFe3f\6gbVRfUWXj9O^eTh&gt;gG&lt;F;C`h&lt;4RIEB:gR&gt;och3h041\:NDB2f9n@h\0dLM05;PgR1O`]aA?1NGX]:^K_&gt;o1Ii&lt;S`WmR:Y7Khg&gt;O^S=F9cMjP9G6V&gt;?Be_mW1FO^AffKkTG_d59HD=AD&gt;\W7[Km&gt;jV;oeo]SISSo8njmF3&gt;l\&lt;@L759;heMh8&gt;Li1Vj&gt;f@R2]oL\DiaDW69&gt;dl`cX9FX&lt;SZj:9J5oASQ@VGWDhcD=W&gt;lW1o]FejM[M3me&gt;1Fb^m:@R\GoVKMgZ\]F^ekUi@&gt;_L&lt;3JYEmX=ck@Kk7mMMNGFR^:5;8=^A=N;TEj:[hZmmkZkcc[mCGJYS?6o9@[KPY\;Q?\7KoglWBdYfj&gt;?G_k6CCm;;O;WoNg?lgk`i_;jcNo\n^_=k[m\81OgOig9cdaM\ion[\oP^POPokSOjhVkON^oLk&gt;l^g8[JiUChi\7CFMankQSo0QaKi&lt;;B3TWQdIgBDh6\aP7OG9A:91MfK7OS_kk\OfXDZgU9bL[7W[]LFb`n&lt;Pl0gL]PRNLKM_m^n\c^caL]iIJ8K&gt;WbVF5[Dli_9R9RaJk`coMKON\5hlgL4FggN_aKKoY]_2G]7I[AnleR:l5STnjWC_cQAmhjZ@hfl^OL&gt;?W3;mK9o9_7?nnMZBU&lt;6jSC[mAUTEdanEknd7flbT_nk4SCdI=K[;KZEj^MU[OLSUJo[V]fJIU2=a6d&lt;WIe\^7^kMaR429IOGam@A6[EWQMaKWhDRi?3cYWWLM`XXC?F=;O3caT&lt;N5;9`BbLZ7QoBJOVCcYG3I0[\b0I::FDaRFc6W9VJEgNM&gt;9mNagFZB4MGJ`BP9CL_Sab&lt;^&gt;YJ`E^m::ZO2Z2YBZcSi8la7eboR8EWhU;97[48l3WK?4D^c?YVdA2gVT0\8W5YN^Ro0FBO7WSoQET=FooBmkJ?&lt;?4hSF8EF81ZU=mKPfdTM8TVP1E@Ibd97d`2R7_la78e?l8jDf6Qm7@V4i:8ZgJD?1mGO6QIbQ\Qnf=&gt;dmT5JM]M^U^]CaHnn:E2eF&lt;cWR[:X:LO7A0CV:DG7h&lt;@&gt;f]ao^L?6C3m=oefN\f^F5?b^KZF2mVY=`lPH1]NK6b6V=AXDc&gt;l&gt;A7cbEMI&gt;RIY6T&gt;n6Pl&gt;Ti&lt;Z&lt;mYWTGXXZ&lt;6oohnn]^7i7??gOegT^N6;gc1h\WmooUAV0C8Ulk6JC&gt;I1K6jl\Jl&lt;el]PKhN9h93&lt;eZPM&lt;&gt;AO2J\2XgZJSj1^5ID7hInAIhMij8OFijMQ3mRdQb263=KJ&gt;En?O3Zm4DIJ7_ZJ?@?nV4j2=5I=Kmd^J3CoO]ADTbe:jnN5&lt;_cSeBD[H89jGgce9f2`FAbk6LJ@GiE;[^3=bn\6oUY\i@RZBBFj?KODDDaB_;T4ogbDg\DP@VQ6&gt;FlE5iK[_lPdMFn5dodZ2Y?&lt;Ra86XK\PD3XK`6VAgXROG]cdULQjX&gt;2D_5G;X1]m44cBUCoY0[h9AXca&gt;8;^[KPGO&lt;JTlR2[Dh4=[FLEW`B0R0SPdSL]QIgfBQJ0EaJ[[YH6X1Ak^0=dK3Y17ldVc\62mg8?Y1HUA&lt;Ui96cd67nXVcb96j3lG]:lQF:IJYI6YEO]l=Pl]9:4L5cE&lt;;YSe2RZ0MEmb&gt;X8[h?WlhQ:k?OJB8:Z5\Tm1L57aoAlAY5NhnZAhgDS8e?kdD0&lt;ZEi6U3fH1;m`CAP0U^[8a:_7FI=MeWnCJ6e;2@;JAaA3ES[&gt;lAb:`Fj8P@d:T^Y3S&lt;5B6je&lt;\W34?gn69Da2M4^8&gt;Dlc0Ba:6NKMCYZD\UUi?FnaR=m&lt;^^[IKlF;G?V:ZMCd:HfofAa?g\j9ZG@LSZW`:K\YF9TLQ&lt;hC;iYcbRJ1I6I]E&lt;WmHdkbU\KVFZGD\DUR=W&gt;H::GnkM3VNjXBT2YjV@dlD93NbOQ;YafY&lt;VoJ:V^T^0d7_5OHbQ2VPHZL9bb?G;4KZKE5fYIG=];DD9j&gt;1Z@d2FI=k9:T\Yef5nKgAXHX7@e\M2Mh;l]:PG]Q@h21QOYc:QFDh\Y;6E6@XbLO6jSA7a`XJ=Hj=QR5e6Dlj7[Sch@1SUCAX`A7BQ4::Z7V=F9]JjCK5[T?:eEK5[:h`m=MDI0UEQL6R6o7]AP:Rlb=TXSobW7UZN&lt;;NlH@0JKRmZ4oh&lt;AR[9:2ClM&gt;5C]&lt;A^\Y\NKJ7GSZ]ai7nm:9PFFe3mCA1\]DY\Df;6aG&lt;iI]h2G6MG`BA\[I]008f:U6XXSNH2jcIXFSGI5P2bbEKA`&lt;X]X_&gt;Alf&gt;olHdB7Sji9F_895&lt;R=QU72KULh&gt;Nnk=eemEHJJ5\HXb\J5g1&lt;?IQ2D]nREHA3iQn:MQ7M_MR=C@igEhO2VLO4P;8hfhhO\jd7m_]\hYl6g_SSC8@oZ=S8WLUY3@d_;3Z9HF:6G@fPV\Gmf48C8d7DB9l62&gt;^6Q5FhZQF4BQJ6@&gt;D&lt;T31C]K09J`?734S615AIU0T1&lt;imE&lt;SWR@dRUJ\P@;05X2&gt;B6168M^mb03Y30353?N4MP`0?\d4B3AD8XFK0@KHn[55&lt;DfFUCcEB^EYZ=:9cKBjKTDJKD=4&lt;:mGkB7ULDHRCb7En57eNZ1Y]boB]]07M]YVWJ&gt;Xe42cI==`=_nc_:=b34=?G8e`^md4mnTXjafU;@8QM_g9MSGPQcUoUF6[JR9fWV0WPaTUJk&lt;&gt;RWSC6&gt;RBfImBMWgQLLH1goHL[MbGblnaYb`V9Z^kZoAMdH\J@gaBVCh9HKj9IA][aYNR&lt;71dCbRC\jA6Y\\CYR\0`AOGo`c[02QL7T^?C8miXgcg2\jLePKOa&lt;:gOh9k3YW&lt;333:?&gt;2:ZK3GkKIZ=5GK:``^0gORZ=GLhS5oC`3?A^WkgLo4]UDQ0EQH9b5\bibYc^E9[2l2UPCFI5;b=TnohY9=Hmf[ZL0[D7Le9lMF@ScH6cP_&lt;@EKTX;A6b;JRcT]P6YKM&lt;&gt;Y`bnBL;GR2HWB[TA\&lt;g;O\SLQ_fJk[dHd\SWCaO6[?1;R&lt;S93F0nIQo=nCRdjP37:c71NcWSgYJJV^6Ag=m]O59Bca7X]mWb9&gt;fi7KbTn4EkIHP86[lV4J?&lt;7i^XY6h?LC4hXN73ID?C^IG&gt;3S7cf3&gt;aVkNF5E5n6@Po=c?S&lt;WOV_=:BBS;De=m1c^PBaT6HnUHRU]AS^cc6n6I_Ulk4S^UBbT7PFPCg[3Q8R]a&gt;ZGL6`A0A]7OE47&lt;dFVS65TW]AP67_^^j@l&gt;NaFQk@AYU?fmDoale&lt;`8Y21eH&lt;hA&lt;[]Xb5eB0O5F1VW6:iCkUYL`^R&lt;i;Z2:8bj4[f;jjX4RVERd:;F7eCaZ8N9Zd_&gt;NQn89ZRf^6FejlaMNb]GX8G]&gt;bS1G&lt;DPcmCL8RbMYOQK7\Ij_FZQB&lt;R8n9C1\SaEITDd4LK61;fO3WORbRBZITjQA]\&lt;4DiK??7?KPEBES;TF2C;l7dgngFZ&lt;A8H7]j@N[2cB9Ra6S0aWSE`DGYOWb3RL]B`MCFP15fgg8iZ\&gt;[oR3A=A&gt;^@5=8Nc8a4jFJbFV]0W``ZUWR&lt;Mf:2k2&gt;L0Y&gt;8U4H9HXL^hbMT:@&gt;6hGG1VYnf6:]R0&lt;&lt;4S1[K^CIA0eM&gt;GF=47LY=HX31:WhR]LEnG9[aS48FGR4_dQ:Gd4^RPe?db?H]&gt;[&gt;RnBB`o&lt;N3XW14WhZUL]U;E5KAHOATc3f:?jV=Q`Z7QgS1QISm`OZj@kGV5m8DKFlLfoRN``H;GlfRQ0km\ddFIaOg5aXY\SQ=1UkK:CAjUI\P0X`&gt;4gH4DY9_L8]gXCf:0n=QV3ZjmVG2Zdec]ZTfiKOS80O3fm&lt;f5:9XBNP`Wn=X0T0eoQciZlY0RS8R]1hbQYY^0H@[Uk_`@eLRaiK5RHJ1]X=nAHb_&gt;P`HER_GjR&lt;nGl5R7EH&lt;97\]C6@:e3h=2J&gt;\7nQZ&gt;`I2:OU&lt;1=6@WCP&gt;_7VOHdDAlD:lZ^T5UUM@=dKTN;i9:&lt;5&gt;9SleK2Xk6gT&lt;P\QX\\EAJZA\^WOAnXnYd9^eW\7mW]^iJ7jFN[eUKkm&gt;JcjFNcjfLemWF]i?9=TfjaC0`LMmSj32?;8chWAmH5CQToBFfIleI`DaC8PAPn[&lt;C?iRIjf08&gt;n]5ln9EoM`MU4DYLC=Y5BFLb3\8bRM?NeH;KWM=UIgd&lt;h^AGg_SQb9Y&lt;SB9jYXii2ZhoEABPWc&gt;2hilnSIBMEY[Z0a?X3DF=i&gt;1E&lt;9l[6=\gP`_B\@MKh1[4^eTZIT]MmnD7?9&gt;6_mOOUNf_if&gt;O5^^n?&gt;O^]O^oG8&gt;\SS4fIA2JH54BGmMGVlAoQ9nU[78aMGfi;26c;Wi`W]Q[oKkOmZ]Qf_oc0?Ed&gt;ARK]kZ]8]co9Uj:^9\C45UagkT1[6m\?]mJMNfV\_O2:5bGUmI]jkReg=NfAV_keCBImmaS7_k;Nb]C55OD&lt;\[KHklPWoo0Y6^\lX:`FBQO;^`aW\Va=\kd`1GIi&lt;b?=GHXXF=_mHh2Z]\=EV9;FI]cbA\ZY8=VdIXFo?n[W?VISW;\cC5[S&gt;3JA7&lt;:lI]S&lt;6fA&gt;3M:dH7&lt;8J5N?JhdbfA3^V&gt;LZmnnNFIoofee`fA3S[5f;A3e4nRP1kgZbO``C_HXF=hBS[Q]3K6f2=3:WGm3i0nQLPO`T`_H5dPYbO``C_HTY;Imn30nMQ0`Ta_H`Hg&lt;?4T]3K6f2=3=YNd_?HDji0nQLPO`oH87W5m3C0cP;_9faKk_8efAldf_j\Mgmf&gt;KZJ_m`cfSNQ_lWegNJFUJWQX][MgbUi&gt;_\Vk;eNi[cO`H^`fL1^o[e?Ikm&gt;JcjFN[OGJJNcFNf;c];mWILHf=?3iG&lt;Kf=S3=kU61MCgnc3K6&lt;D_LlJkGPYTAZbX4?B?OKW;L[^fB_ic;lHfj7&gt;kKmNmn6_OMNE&gt;_oVoZb@L_6oXN1GehUhLmN7=_&gt;GoniB7mUghibGjDlmkjhd[lh3Yc66?&gt;dXXUlGm:oIl=ocOF28G9oK&gt;&gt;gKjRDbm&gt;GAJV`e]D[QFbIiCGL\UId6l&gt;QS[Yd;a[K]@&gt;7Sge_XBj=\9;bfa&lt;1Ag\dGmAAQ`BhYO6^XWHZfPXJIiHRfBRONB7IFDhA?RgAf0_D8i&lt;BO?AL@54GF@]WL@^=f2^P^noWPaK9GhlJR^NdC:0&gt;YMAGEWX?n:lh@ELhY9aShVbImK7b?W=@7k[0NMR?D9\IQi7VfXjYY?O;QL]m0_;lC2UfU[PCTLEmCMG:TXg0WW9KGKB&lt;9;0o94HSIB?8aT:a[F7L`iQ_F4E[djTh?:^YQel?KP&lt;&gt;EFZajL7A&gt;G49:Ch8;l3d]\GmD6KOGleTU?:aE:Bo7Y:eG8DNmZDU95o@eo_iN^8ol75l&gt;N5m5K5@&gt;PP[IA2&lt;KjdQoLR55XA[iU?6Ze:db`m:5R_JeHbkZmmMdMNGFn]:A^WMj\APS5i4SA6Ha80W8T0HJYQ;id05F2&lt;A4:&gt;TB7Ba0PRChl@&lt;1jT3&lt;=Y2_6098J29BYR4NTcE2HGT279B]jc28P@F5681WF7nYH2n&lt;434_2jXWRl0R0&lt;4n]A7beXJ330c?d0a98J5\2Na=0^8bdJ4a[d0cZ8T]GPcUJ1cQTl4P0LC:\&gt;TTMP4S&gt;nh?6d]NP8=&lt;IJ6?4J80afVc`JiBD62CZd`2db`Q305RS1PWACTBPc6S8IACJ_6a9H2BT4461P&lt;1nV6I0C7f2X2OPT=:Z4niXRNiDTiT\;3SH;@2J0hRU9^&lt;5P0UQIdQ0\:8&lt;;8VnR0BLA8&gt;\0[UH0E90:\LPO@TKR8@;1A9YVP0DcL1:&lt;1fA0OH8&lt;I6&gt;cR0=gAckV&lt;:&lt;P=1_AAdS@U8V0B411AV&lt;4=:PY5kbkKmM&gt;NW?gbgbd]S5=6_HX2K;DdEi@923l90FG@H5bJV04;Qg&gt;\@4Ka0RIW40&gt;4Jk2o9]m8&lt;HBBR6AjQ&lt;nYTm&gt;][&lt;hff9E?e\nM6\TjoGM^I\CH2?LllX]oe[]_hG5[;oSI7J5Vm`l2Z4T[2R8J6A_hEZ5V_QD2`OHLaE4&gt;KY^QR0Vh93Ro0\C:Yk:f&lt;&gt;&lt;fg4PJk0VH_6a1A;`V2&lt;LgaDkYQYlT1YnOFYddFBnZFBjP]b9IL:96]:fV@IYdEhhBGf^BnT8T`6IRe919R3cB``aEf`TTkQQ846KnZbS@Z[M2]DNJG[jf]a1A&gt;cE9O7S3Y&gt;=TQ@Na]DNFSWjHFXlVFAeLFAiBlAlfKWA6T17G6UK&lt;QRMNj]c:J=gE3iad1?WZL]4;R?T2:k=:[38R9c80F@004TY09Ra6Q9e:W\A2fTKS`4JUbFXaH69e@:f&lt;P&lt;B5;L2WH?3PnjWSNKVH0&lt;iR]@&gt;O9SB1YOAQCcPP^3X`B@F?;;@?I7Udc=RVn5JlU\36UE7RfSiAbEOVkiS11kZYgM614mo^M9DWEE[8ckY_QLb14&lt;FAO5eBNSUM=M1IHcLXh_XDfCBYN3jKhF2lEQ]220;;0JLSo15`P@HU4J6`ToaH7H=hS;2i2R4mV8SO&lt;&lt;D5J0i\oDf@BF8E=2SPmF&lt;I84GYR@bED6V9eiT7B[VC51R[F43]Y&gt;X90gW2gGIPL46LmWgmH&lt;A_;Rm8`f\ZT&gt;Uj=e=X]MKDW&lt;^5CJ_X&lt;CVPJ@iWfbWhSge0&lt;:EbglKMDb@NnXhNQQhfHVLoDSb:RJRQIb[=h8:LiZSXQF^&gt;^YKd]J;K?S5V8&gt;lX?k&gt;CNDhB;0K3`42JDOb]R85DZ6fN&gt;_M:KZVboQVe6X8NlQA4aN&gt;G4b@iiHV@=@&gt;:2Md\X2Z6YS18gdd_XILS9`hQFOLA;jU?A\FG9CEdiNWVRAlA:]EJFQ\aKnK&lt;O5CdodXo=1kJlR^</protected>
		<protected>E@=3BJiO100h]L]MGkcK3fBoaKgcnO1C[KY_3VgFk3&gt;]:dbWRb]W]ja3ZeDT&gt;gG&lt;F3C`h&lt;FRIEB:dR&gt;oal1lR8P`R;7UdVj]0WcI1;0g&lt;G02gHM\_?LJaZU?0;bU&gt;?K&gt;mo9iW:SW4SQU`7k?R&gt;OCUM]W&lt;jeB0_&lt;LPOEolh&gt;\=nNYf_\cHOnG4WQd6UA`SLO_Ad?gO&gt;njZG]]_]Neo`^=LRZTLTT5MG&gt;RnKeM2h&gt;L8iUjM&gt;8RC2OMoIfR2X&lt;C_Lka@&gt;B]G96ESU?&gt;o2XYIhW38;liQ9CWZnPo?&gt;KMefNWloPXN[gA@4aES&lt;b^k\fIToLX7W&gt;VjQd\eM;[egOfFNdc4Fc_EH4l_;:cCiGgffNloHOOoK?k^dESS?T4O=8dOT`=laNgjoJd?k]fkSK;maTR&lt;dj`li``ocMSKGn[j&lt;jc_7kgi^7IcOQgOOi9?[bE7\ieOQfbonU;ZS_oO[CWGnheej`dfJ[E4dcVnabNSF]RmlgFk_L4L^T]aH&lt;L_4ALD9BIXcaLElN45TVmoHIn5LkOOWc6TGb3k?:O0jnKjTd77?QT55dT;3G@lN^OHf&gt;&gt;1j7dNFbbY@&gt;&gt;fT=;gAHEDoTT_:2&gt;n;mm:^M=VH&gt;NRK\S]RR5IgokFdD&lt;=L]5ojD9;]97O9dgEW_6oWm9BPdl^nZ?o^6d[_k9Vo73OWoL^^FL=?6W_g3AEThcGmgMPoJlfk7_PEAZ86WUP=&gt;gC^?&gt;fB?^OYOoN\SFhFP33V&lt;;_ZZD&gt;?MOh69C5U\il6Ee;K]EW1F9MOPB`Un8XVoik_27ZZhoLHhNQ9WQ5^J&gt;[DGQ3d&lt;mdeV`fM;Ue90HQ_JLWAP9VY]aIebRFNa[kULL&lt;ggoJbB8@K;]6jc2ACbNlN7i;5YCEUKEE?HOE4BE2^g1iod1B&gt;Bi;:g\bd@EG8V`a\I86mkL0[KVLT&gt;F8&lt;l[d8dgVfLI1l5cW^\\:5cUf_4@@LFm?E9`?L82Q9LjXdOB\jMADX8]2W=Q^8c48jgNJ?POY_S`\i@&gt;HO;WQJnB:^ZFFdPgaHbLmm:e2d6FGaAES?RW79J?K23Zk2&gt;57mVKRo?Gm1dhcWo]cgkKL;^78Wn`D6Dnj:0CC]D6N9&gt;FYGXBKLfTS7:JGOHYKT&lt;^K8:7jHZK2ZV6o_=`el_OdOdo7=oiofiXo`aeg7gOmeOnnoM5mC_;;jA?d@`Z7ac3i0&lt;MI;V6POE;m7W&gt;gR`S@jNVaGTQ_3M?n=YH6OO`PJCWX[o:VW;Oe8W&gt;_gmb^@If_B08j@VK_T_7Th69Em6D\[cNFhR[D7lbEWf]58D^neBMe^^hNmGOF&lt;^7TW_VY3kLXS0N3caUinfgg4987V25OHBlYbVT5U=Hf6OLXW\d0GJRSYHiMlhIA7eK3gPmXeCiNR30&gt;=9L649lFk5LPH&gt;=gkaY35o]dbnGBCXYNP`IUh;647NM][ALh98dShRcBkB9OWieKb^Yj4n6D_9GFY1]m74cLEW2`0En:SZL?c2:o^J?OIMQ&lt;_iQ7]6dJ\KKU\Q&gt;8JCcE2h&gt;ZiJc5VF;2jEK0TTbOMGiGhXUe0GhBF]`\GFj:WHhhPiZkEZ?jhXGOnF6K2=h\nMB7jJ1EfZg&lt;ZEW1OcLHkb6emX6GYY=DJ4LIdbBaNI]==gc7_Nhm&gt;C_7Y49O2EBCRKSZHOdD=V1mO::`NeE`R;N58LWEdZei1Fc\=Al0`AP9U^Z9a&lt;_&gt;FIXPHNASl&lt;jBcRGVSTSMZ6&lt;:5V1IQ\dAT`YGH&lt;DB4H&gt;W=bKOI&gt;?8mZH&lt;\6UA&gt;@jGb`b?P77GklOJ&gt;U[V`EeWlJjS9g`LCMe?mHF;G?W^ZL_IF1`oZPCNW4cBG]Qk1a0QDgH3\C5YQIaDFbbnU5d2c&lt;b?^I__nYc`JMhM]EJ^aAe\dNhA:Y&gt;P&gt;j_^kjURB9TgK3BFFW?n4m9I&lt;IADXedA`beC&lt;5RGiYV@F:h=P=BF=BgTiIVX=feiJV\I[X]PIZY4g0CMBDR1CgIZ5U]]WH[29J=bkGZ^QChHZIW^6D::M23&gt;LZEUVMR^eGFDVAIS\V;FUTn@nd;^WN:4aLZE6[4VWob&gt;b3a2RUIJ23IYB018_\OO=0[cgB`CB[K3O^PRE=gT&gt;eCjNZ&gt;C7CN0RWaeii9;2G@0cWQ[OCoKm4[OTbXc5FB2da_H28_&gt;LcJR@hQTKI`cMMBk9RZ\iKO7=g7ofjdJK6gS&lt;6^C?EN:bFVT9_eaa]KGN=4`Q?MGaXRJK=f0Q2eba]PCQCO?2kFk4gn=oSKEH5V0[2IL_mh=VckgoYT;T?lK`bOQHBII4QF1N8GMaVkodoM_Y_SmBbReQ2C`GX&lt;DVV&gt;;CVb:U_B?J&gt;a4bdMKam1[JWcF^:n65=iU95hi`;656E1N1Z9CUIk:6N?[9o3Jl^&lt;VPLEZEOC77E069P[GHi6I1JLhfkPD&lt;ASGC583I;7IH7Qe`]K6ATY7KLA4`C6JC&lt;3&lt;XjH00JdRa:FRXjS68^HTObV&lt;M1&gt;?fKPV5IHB0C\Q`&gt;BUHbE17UZ14SZOhijiP3mj@QF8HJPK3mP\2J^BL_HXPcij[JLIZ;CG_`JkIK6kVVJiJ\UK\JIRJVV_V6BCDikC[jiQ=FD?jkkcF2L49GnMZTd2[X`OkBLklB[L^9lM&lt;8hG1L_c1SCbCWV2KKc781ZHbkg8ai&lt;QMY[SgaF6L=i4f3RS=SGjNK28LC:;i&lt;K=Xja]CLbGbXOflPSOm;8l9eGm;0UZZi^O_7C9A[AjMVJe=`ZLRYXERGVHCcM7?35gU44IbVCdDHc]4fA1RnmlPMS&gt;9bd?24miXebg2Ri^K0gjRHeLoWUR?GNP?\?Pjh:TZR=WM]]0dFN;\3O:SA1FD]Te2gN0`=oleYlIoDlBcUS&gt;0]8E8B\^@]GVIe]3kAD3W1Ke&lt;:JCRUcc6_&gt;o6TW&lt;;]6VV==MWkeF1=\&gt;J&gt;22`RgXC1Y&lt;K5^N9=BZ2JTBeai_R:jAiSL6:RBY^a2]fN_[X=c]`NZ\]BBV[?Md4mL2o5^X`&gt;DKJ0hX7mFG?;BT2?NP]L4i&gt;m?PVKIQk:5^af]1GU;`7oW1OmGKb`]d7@R77g_DV1R^S@J@^m9jTTU&lt;KBiO=AZ@dO&gt;A8e&gt;LUOkS9L&gt;S?j5e^VISFDUG50mi&gt;l&gt;gLl[9&lt;Z8F?\`&lt;J^KlfJSF3^8DE&gt;]`J:ePajOEXJm`Ym@`fRTD3n8a4fe2k4:cBISMh958HMCnV`kjj09d1^\Z@D\&gt;=:Pj_JNm?GX2R?kTW:Y\9UG]&gt;W_U61&gt;?9Y1i49VFT=EY_@28jb91nEB\BN]eS4dMS\I4DDPbZCZ:^KI8B&gt;Jn4X22M&gt;KfSD@MCdY8CcSUACeD]C&lt;][dTRkmDnNKSSdiI43N`o3=eC`14TkCnb_NYiYmNU7FT&lt;Pj\:6a&lt;fGW@hA1h0&lt;3gRB2^0jVW\g;P;=?\BVTVeDnlJnl=4NEEH6`DLNRi^ng;eEP2ARL_]SfLPEATb66&lt;h6L&lt;jPX^Wo?UC4TJ`QVfj12:l\_`fEIOEn97bJRL8P;K4mUAV8=LaTR=]0WPaZUWR2Mf:6k2&gt;L2Y&gt;8U4I9HXANZVf9DP]&lt;`O:5IEaGK[X:2c&lt;1F36eMWk30ZZLY]Z8^i3:aX30:Wf`E&gt;Jl[TTiABQK[A9IV`5&lt;N26Xh]]&lt;l;^GSJX8oRiL?S4DjY`19m6YWKEREB?4[[DLVXbiY_3a\^&lt;`&lt;^2`Dg=GfG7GZG^\XOmVB2^jnW1K6ehYBWRj&lt;XZOEncWFVV^9]c:VB6JZf_W9TIKA53J&lt;SE&lt;`;[\If3eEY5Em::IYgh43X]_Gd9X&gt;NDn=]5&gt;_]BlIJ]0O[Ja\@?VY;mmP4:1QZOnfTNUh9I4W&lt;AJ;DG4M&lt;;1cFOF\@D6_FP;_Y&lt;B7&gt;5K5mUfSe9j@VZg4mK5H&gt;WiQj&lt;LGa6]BdA:KYAE?ZV;Z`2JE[O;^49DoHX360`?jCUoJlW`X3PhOlmYN46[:PoKYH:nGCT5&lt;&gt;g5PeIJ0M1SK65h&gt;D9EfHEIZRU]TANn[Ie&lt;9Sc?efGLS?AEN\i\i:GmS?=efLLS?eefLSg?]JYN3=TfZc@4`jMmSZS1&lt;IUch1bkP:g28mT\Zci[9QkRj`0RPnJ&lt;;_iRInc1XBgfRIoTZM\h^bQ:&lt;BECFRH[B\;;2bhTSINkYX[;Ub[=F=?;\QBk\j9i5A2bQO1=_?^1l=2E5abZ\Lj?[K&gt;YCMXFQFe;P3V`YF47FF\8CPJm&gt;UohN2YZ4YjF4^J?OJS;Km=X=9bnINO;Wng]``o^jkiGoFJ;:OFW_7i5O_F?g_97CEo5hAR9FE_BW?iiO_nY_kN2hRo`K9dYQG1ZmZJ;U[62YL&gt;Z3b3Zfd&lt;UGI2f3?4CdeB1OcGl1Bne`^eRMb6_8BTZ\lNCT;:HVn:Xd\?0_CnB]4RYR&gt;ZVM7:9C6Dm:CGWBSG52^[S5OTXbH:ENRZm;8;NP6K&gt;QJ?K4MG0col?Pf?BahT&lt;Mmi\D0PLk[__&gt;BWNDiLa[hA`:Sm7&gt;UZcf?fE&gt;JUUgF[3k27OCH4bZ?o&lt;BejBWO8[L]@c_;J=Q2cmZL1DGEn?D5XbJMd4YbhfFdck2R3OQV\HBST2LQii3iN:W7Fm[Z&lt;lEWW3Q`k0OUIi1PDd2OLe\N@dk7\le1Alj?diiZF99ZkOLBFm^ZH8RKbNE_U`Si7PQd13cXa7T9TlPFao@hei7FX_L5K;eKleL@ij0LmUcDjBGY0Hj4`m^EN@9_E2JKHlC:?J5lWcDHPWa?[k7k8_jMelkFnlhIJRB0ZAG@@86P3T;l0A0m4b2MRI1&gt;J0\A6&gt;VTB6H9`PRKHLA:IBT28CI2U9@_8O3?2IR7LDkHP&lt;GbP3:YdMl@6PT4&gt;=B@QEA1TfPPIPIP1@PCid?RgZP&lt;S?iL@7cL&gt;88W86n70HF5\Z72h@3J0W:H@?=42?Po92gC:?bS`T11De\`9j:ah2AihVPLoDW3QQhf0XLD[0S6oNH0M^DK2I:f?a0ITX0@;0j660HSSVX1BY\A=d@I=?SW8\Qc40Q46`S&gt;QE1X`:8IF3`&lt;EjH1H8&lt;Y5J6?OJ60jD0o:PS1W0NZdPM@3&gt;H:c54P^R5fH0`F4;4;2Pb0JSa1P`PDj50o7UV5:B^25RE\A1Zf`hDLVJR0D:AH0cBFb5H6&lt;2kVa2&gt;PR&lt;k1UX9X2CKP490@Y2GH7Q;DR7E&gt;2Wa5WBXYb;0B&lt;JHA0S^XDRTmX`8AB_C8P8ajK4Qk28V4Djgo8_m86&lt;O1YQ1&gt;aeJ83A3PhU2RCYmfWV7a@^^6QINfmfJk:\^327TjC77MZmmZK`[7IhfFBAhj@W`Qhi^031bVjQFS1XLnD6HKY;d&lt;1TSc&gt;39HfX]7@i:V6FR5C^9\9^o`lJ85iHFePBUJ5O6B&gt;[=b8Ze9TE`^TUEJRUj3HBIlAIW_EBaIDRlaPfBJI=DDgU8JTT7J`T;YPBR]cbQaPDDd&lt;;Bb;1b6he&gt;Zf]amW&lt;7U5[Z]acL[[TEYRbK]1CK[i9P&lt;FWDnVJ&gt;Gf4XMYoX;MMDV&gt;]Joc&lt;IB1hd=FAaM?8MV&lt;JWUiFm2\F4`D?4dTjd7cC?AEK5=bBQLH_8haj0ZQT6PQTa::JST6a:4lj6XJY&lt;Ba6XY[&lt;B6&gt;XIb4`:db@7I1o?hdXM?k_4D7Gf]]O^OG3F1jWm83eH841:&lt;m:Ra?1aUZXDYAITlQ`f_i[`EiUahMgNTom_BjljAj?XTPmM67?bf2Ad;lUhXBW^OT^E16&lt;E1eRlYEBik&lt;O8d[W5ZTY;A:]U2YToi\m8;0fV4ObDXPQa:HD&lt;&lt;]8ARHQ0MG?209H2O8dhG&lt;@b2D735RP;2EaI[h\a;8?^4M71\PHc4QFY`9bU6CV5imf7[VV@16R[PWUF5kCTG;E1[6\XQJPPWhCmFc^5B\;\F^STh=Z?f\Hdel\U8Y`Olk7cOXlE_YoVM=H^NZ[TL[G93\B^oblnG=FgJ\&lt;Wdk=&gt;j&lt;_D3X7o</protected>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='21'>
			<Action classname='StepType' isroottypedef='true' typecategory='1' timestamp='1666107258' typeversion='23.0.0.1' typelastmodversion='23.0.0.0' typeminprodversion='23.0.0.0' typeflags='33554446'>
				<subprops>
					<Substeps typename='StepTypeSubstepsArray' xsi:type='StepTypeSubstepsArray' classname='Objs' flagsforinstances='524312' instanceoverrideflags='655384'>
						<value lbound='[0]' ubound='[]'/>
					</Substeps>
					<DescriptionFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "ACTION_DESCRIPTION_NAME") + (("%ModuleDescription" == "") ? "" : ",  %ModuleDescription")</value>
					</DescriptionFormat>
					<DefaultNameFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "ACTION_DEF_STEP_NAME")</value>
					</DefaultNameFormat>
					<Menu typename='StepTypeMenu' xsi:type='StepTypeMenu' classname='Obj' flagsforinstances='524312' instanceoverrideflags='524312'>
						<subprops>
							<CanBeSubstepType classname='Bool'>
								<value>false</value>
							</CanBeSubstepType>
							<CanOnlyBeSubstepType classname='Bool'>
								<value>false</value>
							</CanOnlyBeSubstepType>
							<Category classname='Str'>
								<value>""</value>
							</Category>
							<ItemName classname='ExprValue'>
								<value>ResStr("NI_STEPTYPES", "ACTION_MENU_ITEM_NAME")</value>
							</ItemName>
							<SingularItemName classname='Str'>
								<value>""</value>
							</SingularItemName>
							<SeparatorBeforeCategory classname='Bool'>
								<value>false</value>
							</SeparatorBeforeCategory>
							<SeparatorBeforeItemName classname='Bool'>
								<value>false</value>
							</SeparatorBeforeItemName>
							<Group classname='Str'>
								<value>Action</value>
							</Group>
						</subprops>
					</Menu>
					<AdditionalResultsHints classname='Objs' valueflags='4194328' structureflags='524288'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
					<TS typename='TEInf' xsi:type='TEInf' classname='Obj' flagsforinstances='262168' instanceoverrideflags='4456472'>
						<subprops>
							<Id classname='Str'>
								<value/>
							</Id>
							<Icon classname='Str'>
								<value/>
							</Icon>
							<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7143448' structureflags='2097152'/>
							<PreCond classname='ExprValue'>
								<value/>
							</PreCond>
							<LoadOpt classname='Str'>
								<value>PreloadWhenExecuted</value>
							</LoadOpt>
							<UnloadOpt classname='Str'>
								<value>UnloadWithFile</value>
							</UnloadOpt>
							<Mode classname='Str'>
								<value>Normal</value>
							</Mode>
							<WindowActivation classname='Str'>
								<value>None</value>
							</WindowActivation>
							<ResultOption classname='Num'>
								<value>1</value>
							</ResultOption>
							<StepFCSeqF classname='Bool'>
								<value>true</value>
							</StepFCSeqF>
							<IgnoreRTE classname='Bool'>
								<value>false</value>
							</IgnoreRTE>
							<UseMutex classname='Bool'>
								<value>false</value>
							</UseMutex>
							<MutexNameOrRef classname='ExprValue'>
								<value/>
							</MutexNameOrRef>
							<BatchSyncOpt classname='Num'>
								<value>0</value>
							</BatchSyncOpt>
							<SwitchEnabled classname='Bool'>
								<value>false</value>
							</SwitchEnabled>
							<VirtualDeviceName classname='ExprValue'>
								<value/>
							</VirtualDeviceName>
							<SwitchOperation classname='Num'>
								<value>1</value>
							</SwitchOperation>
							<RouteGroupConnect classname='ExprValue'>
								<value/>
							</RouteGroupConnect>
							<RouteGroupDisconnect classname='ExprValue'>
								<value/>
							</RouteGroupDisconnect>
							<MulticonnectMode classname='Num'>
								<value>1</value>
							</MulticonnectMode>
							<OperationOrder classname='Num'>
								<value>2</value>
							</OperationOrder>
							<ConnectionLifetime classname='Num'>
								<value>0</value>
							</ConnectionLifetime>
							<WaitForDebounce classname='Bool'>
								<value>true</value>
							</WaitForDebounce>
							<PassAct classname='Str' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value>Next</value>
							</PassAct>
							<FailAct classname='Str' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value>Next</value>
							</FailAct>
							<PassActTarget classname='ExprValue' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value/>
							</PassActTarget>
							<FailActTarget classname='ExprValue' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value/>
							</FailActTarget>
							<CustExpr classname='ExprValue'>
								<value/>
							</CustExpr>
							<CustTrueAct classname='Str'>
								<value>Next</value>
							</CustTrueAct>
							<CustFalseAct classname='Str'>
								<value>Next</value>
							</CustFalseAct>
							<CustTrueActTarget classname='ExprValue'>
								<value/>
							</CustTrueActTarget>
							<CustFalseActTarget classname='ExprValue'>
								<value/>
							</CustFalseActTarget>
							<LoopType classname='Str'>
								<value>NoLooping</value>
							</LoopType>
							<LoopWhile classname='ExprValue'>
								<value/>
							</LoopWhile>
							<LoopStatus classname='ExprValue'>
								<value/>
							</LoopStatus>
							<LoopIncrement classname='ExprValue'>
								<value>RunState.LoopIndex += 1</value>
							</LoopIncrement>
							<LoopInitialize classname='ExprValue'>
								<value>RunState.LoopIndex = 0</value>
							</LoopInitialize>
							<LoopOpt classname='Num'>
								<value>0</value>
							</LoopOpt>
							<PreExpr classname='ExprValue'>
								<value/>
							</PreExpr>
							<PostExpr classname='ExprValue'>
								<value/>
							</PostExpr>
							<StatusExpr classname='ExprValue'>
								<value/>
							</StatusExpr>
							<CanSpecifyModule classname='Bool'>
								<value>true</value>
							</CanSpecifyModule>
							<CanEditCode classname='Bool'>
								<value>true</value>
							</CanEditCode>
							<CanEditModulePrototype classname='Bool'>
								<value>true</value>
							</CanEditModulePrototype>
							<CanEditParameterAdditionalResults classname='Bool'>
								<value>true</value>
							</CanEditParameterAdditionalResults>
							<PrecondIntExe classname='Num'>
								<value>0</value>
							</PrecondIntExe>
							<Requirements classname='Obj' flagsforinstances='1' valueflags='1' structureflags='2097152'>
								<subprops>
									<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
										<value lbound='[0]' ubound='[]'/>
									</Links>
								</subprops>
							</Requirements>
							<CustomResults classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</CustomResults>
							<AdditionalResultsHints classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</AdditionalResultsHints>
						</subprops>
					</TS>
					<NI_Data typename='StepTypeNIData' xsi:type='StepTypeNIData' classname='Obj'>
						<subprops>
							<EditPanels classname='Strs'>
								<value lbound='[0]' ubound='[]'/>
							</EditPanels>
						</subprops>
					</NI_Data>
					<Result classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
						<subprops>
							<Error typename='Error' xsi:type='Error' classname='Obj' flagsforinstances='4194304' instanceoverrideflags='4194304' valueflags='4194304'>
								<subprops>
									<Code classname='Num'>
										<value>0</value>
									</Code>
									<Msg classname='Str'>
										<value/>
									</Msg>
									<Occurred classname='Bool'>
										<value>false</value>
									</Occurred>
								</subprops>
							</Error>
							<Status classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</Status>
							<ReportText classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</ReportText>
							<Common typename='CommonResults' xsi:type='CommonResults' classname='Obj' instanceoverrideflags='4194304'/>
						</subprops>
					</Result>
					<CodeTemplates classname='Str' valueflags='4194328' structureflags='524288'>
						<value>DefaultLabVIEW|DefaultLabVIEWNXG|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultHTB72_Template|DefaultHTB80_Template|Default_Template</value>
					</CodeTemplates>
					<BlockStartTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockStartTypes>
					<BlockEndTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockEndTypes>
					<AppliesToBlockStructure classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</AppliesToBlockStructure>
					<CanEncapsulate classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</CanEncapsulate>
					<Category classname='Str' valueflags='24' structureflags='524288'>
						<value>Action</value>
					</Category>
				</subprops>
			</Action>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='22'>
			<NI_LabVIEWParameterResult classname='LabVIEWParameterResult' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>1</value>
					</CheckedState>
				</subprops>
			</NI_LabVIEWParameterResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='23'>
			<VIParameter classname='VIParameter' isroottypedef='true' typecategory='3' timestamp='1695827607' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Label classname='Str'>
						<value>_notNamed</value>
					</Label>
					<Caption classname='Str'>
						<value/>
					</Caption>
					<ArgVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgVal>
					<ArgDisplayVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgDisplayVal>
					<Type classname='Num'>
						<value>8</value>
					</Type>
					<WireRequirement classname='Num'>
						<value>2</value>
					</WireRequirement>
					<ArrayType classname='Num'>
						<value>50</value>
					</ArrayType>
					<DefaultArraySize classname='Str'>
						<value>[]</value>
					</DefaultArraySize>
					<ClusterType classname='Num'>
						<value>20</value>
					</ClusterType>
					<NumType classname='Num'>
						<value>7</value>
					</NumType>
					<ReferenceType classname='Num'>
						<value>0</value>
					</ReferenceType>
					<StrPass classname='Num'>
						<value>0</value>
					</StrPass>
					<DisplayType classname='Str'>
						<value/>
					</DisplayType>
					<UseDefaultValues classname='Bool'>
						<value>false</value>
					</UseDefaultValues>
					<PartiallySpecified classname='Bool'>
						<value>false</value>
					</PartiallySpecified>
					<ComplexParts classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterProto classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterEls classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</ArrayClusterEls>
					<UserData classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<AdditionalResult typename='NI_LabVIEWParameterResult' xsi:type='NI_LabVIEWParameterResult' classname='LabVIEWParameterResult'>
						<subprops>
							<Condition classname='ExprValue'>
								<value/>
							</Condition>
							<Flags classname='Num'>
								<value>8192</value>
							</Flags>
							<CheckedState classname='Num'>
								<value>1</value>
							</CheckedState>
						</subprops>
					</AdditionalResult>
					<Direction classname='Num'>
						<value>0</value>
					</Direction>
					<ConnectorNumber classname='Num'>
						<value>-1</value>
					</ConnectorNumber>
					<LegacyClusterType classname='Num'>
						<value>0</value>
					</LegacyClusterType>
				</subprops>
			</VIParameter>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='24'>
			<NI_NodeProperty classname='LVNodeProperty' isroottypedef='true' typecategory='3' timestamp='1695827607' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<LongName classname='Str'>
						<value/>
					</LongName>
					<DataName classname='Str'>
						<value/>
					</DataName>
					<Direction classname='Num'>
						<value>0</value>
					</Direction>
					<ConnectorNumber classname='Num'>
						<value>0</value>
					</ConnectorNumber>
					<UniqueID classname='Str'>
						<value/>
					</UniqueID>
				</subprops>
			</NI_NodeProperty>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='25'>
			<FlexGStepAdditions classname='FGModule' isroottypedef='true' typecategory='3' timestamp='1695827607' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<ViCall classname='VICall'>
						<subprops>
							<CallType classname='Num'>
								<value>0</value>
							</CallType>
							<ClassPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</ClassPath>
							<ProjectPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</ProjectPath>
							<RemoteProjectPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</RemoteProjectPath>
							<VIPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</VIPath>
							<Namespace classname='Str'>
								<value/>
							</Namespace>
							<RemoteVIPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</RemoteVIPath>
							<CallName classname='Str'>
								<value/>
							</CallName>
							<VIType classname='Num'>
								<value>0</value>
							</VIType>
							<ShowFrnPnl classname='Bool'>
								<value>false</value>
							</ShowFrnPnl>
							<VIDescription classname='Str'>
								<value/>
							</VIDescription>
							<TDChecksum classname='Num'>
								<value>-1</value>
							</TDChecksum>
							<NodeLibraryName classname='Str'>
								<value/>
							</NodeLibraryName>
							<NodeLibraryGenericTypeName classname='Str'>
								<value/>
							</NodeLibraryGenericTypeName>
							<NodeClassDataName classname='Str'>
								<value/>
							</NodeClassDataName>
							<NodeUsesDataValueReference classname='Bool'>
								<value>false</value>
							</NodeUsesDataValueReference>
							<NodeIgnoresInternalErrors classname='Bool'>
								<value>false</value>
							</NodeIgnoresInternalErrors>
							<NodeOperationMode classname='Num'>
								<value>0</value>
							</NodeOperationMode>
							<AutoDetectLVRT classname='Bool'>
								<value>false</value>
							</AutoDetectLVRT>
							<RemoteHost typename='Expression' xsi:type='Expression' classname='ExprValue'>
								<value/>
							</RemoteHost>
							<RemoteHostByExpr classname='Bool'>
								<value>false</value>
							</RemoteHostByExpr>
							<PrototypeFlags classname='Num'>
								<value>0</value>
							</PrototypeFlags>
							<VI classname='Str'>
								<value/>
							</VI>
							<OverrideBinaryClassPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</OverrideBinaryClassPath>
							<OverrideBinaryVIPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</OverrideBinaryVIPath>
							<OverrideBinaryProjectPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</OverrideBinaryProjectPath>
							<OverrideBinaryNamespace classname='Str'>
								<value/>
							</OverrideBinaryNamespace>
							<OverrideModuleOptions classname='Num'>
								<value>0</value>
							</OverrideModuleOptions>
							<BuildSpecificationName classname='Str'>
								<value/>
							</BuildSpecificationName>
							<OverrideBinaryVIChecksum classname='Num'>
								<value>-1</value>
							</OverrideBinaryVIChecksum>
							<ArrayParametersMatchLVArrayDimenions classname='Bool'>
								<value>false</value>
							</ArrayParametersMatchLVArrayDimenions>
							<Parms classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ typename='VIParameter' xsi:type='VIParameter' name='' classname='VIParameter' structureflags='131072'>
											<subprops>
												<Label classname='Str'>
													<value>_notNamed</value>
												</Label>
												<Caption classname='Str'>
													<value/>
												</Caption>
												<ArgVal classname='ExprValue'>
													<value/>
												</ArgVal>
												<ArgDisplayVal classname='ExprValue'>
													<value/>
												</ArgDisplayVal>
												<Type classname='Num'>
													<value>8</value>
												</Type>
												<WireRequirement classname='Num'>
													<value>2</value>
												</WireRequirement>
												<ArrayType classname='Num'>
													<value>50</value>
												</ArrayType>
												<DefaultArraySize classname='Str'>
													<value>[]</value>
												</DefaultArraySize>
												<ClusterType classname='Num'>
													<value>20</value>
												</ClusterType>
												<NumType classname='Num'>
													<value>7</value>
												</NumType>
												<ReferenceType classname='Num'>
													<value>0</value>
												</ReferenceType>
												<StrPass classname='Num'>
													<value>0</value>
												</StrPass>
												<DisplayType classname='Str'>
													<value/>
												</DisplayType>
												<UseDefaultValues classname='Bool'>
													<value>false</value>
												</UseDefaultValues>
												<PartiallySpecified classname='Bool'>
													<value>false</value>
												</PartiallySpecified>
												<ArrayClusterEls classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ArrayClusterEls>
												<AdditionalResult classname='LabVIEWParameterResult'>
													<subprops>
														<Condition classname='ExprValue'>
															<value/>
														</Condition>
														<Flags classname='Num'>
															<value>8192</value>
														</Flags>
														<CheckedState classname='Num'>
															<value>1</value>
														</CheckedState>
													</subprops>
												</AdditionalResult>
												<Direction classname='Num'>
													<value>0</value>
												</Direction>
												<ConnectorNumber classname='Num'>
													<value>-1</value>
												</ConnectorNumber>
												<LegacyClusterType classname='Num'>
													<value>0</value>
												</LegacyClusterType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</Parms>
							<NodeProperties classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ typename='NI_NodeProperty' xsi:type='NI_NodeProperty' name='' classname='LVNodeProperty' structureflags='131072'>
											<subprops>
												<LongName classname='Str'>
													<value/>
												</LongName>
												<DataName classname='Str'>
													<value/>
												</DataName>
												<Direction classname='Num'>
													<value>0</value>
												</Direction>
												<ConnectorNumber classname='Num'>
													<value>0</value>
												</ConnectorNumber>
												<UniqueID classname='Str'>
													<value/>
												</UniqueID>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</NodeProperties>
						</subprops>
					</ViCall>
				</subprops>
			</FlexGStepAdditions>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='26'>
			<VIParameterElement classname='VIParameterElement' isroottypedef='true' typecategory='3' timestamp='1695827607' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Label classname='Str'>
						<value>_notNamed</value>
					</Label>
					<Caption classname='Str'>
						<value/>
					</Caption>
					<ArgVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgVal>
					<ArgDisplayVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgDisplayVal>
					<Type classname='Num'>
						<value>8</value>
					</Type>
					<WireRequirement classname='Num'>
						<value>2</value>
					</WireRequirement>
					<ArrayType classname='Num'>
						<value>50</value>
					</ArrayType>
					<DefaultArraySize classname='Str'>
						<value>[]</value>
					</DefaultArraySize>
					<ClusterType classname='Num'>
						<value>20</value>
					</ClusterType>
					<NumType classname='Num'>
						<value>7</value>
					</NumType>
					<ReferenceType classname='Num'>
						<value>0</value>
					</ReferenceType>
					<StrPass classname='Num'>
						<value>0</value>
					</StrPass>
					<DisplayType classname='Str'>
						<value/>
					</DisplayType>
					<UseDefaultValues classname='Bool'>
						<value>false</value>
					</UseDefaultValues>
					<PartiallySpecified classname='Bool'>
						<value>false</value>
					</PartiallySpecified>
					<ComplexParts classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterProto classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterEls classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</ArrayClusterEls>
					<UserData classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<AdditionalResult typename='NI_LabVIEWParameterResult' xsi:type='NI_LabVIEWParameterResult' classname='LabVIEWParameterResult'>
						<subprops>
							<Condition classname='ExprValue'>
								<value/>
							</Condition>
							<Flags classname='Num'>
								<value>8192</value>
							</Flags>
							<CheckedState classname='Num'>
								<value>1</value>
							</CheckedState>
						</subprops>
					</AdditionalResult>
				</subprops>
			</VIParameterElement>
		</typedef>
	</typelist>
	<Data classname='SequenceFileData' valueflags='4194304'>
		<subprops>
			<Seq classname='Objs' valueflags='4194304'>
				<value lbound='[0]' ubound='[0]'>
					<value>
						<Sequence name='MainSequence'>
							<subprops>
								<Parameters classname='Obj' valueflags='4456448'/>
								<Locals classname='Obj' valueflags='4194304'>
									<subprops>
										<ResultList classname='Objs' valueflags='4194304'>
											<value lbound='[0]' ubound='[]'>
												<elemproto>
													<_NAME_IN_ATTRIBUTE_ name='' classname='TEResult'/>
												</elemproto>
											</value>
										</ResultList>
									</subprops>
								</Locals>
								<Main classname='Objs' valueflags='4194304'>
									<value lbound='[0]' ubound='[0]'>
										<value>
											<Step typename='NI_Measurement' xsi:type='NI_Measurement' name='Source DC voltage and measure voltage/current'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:FbWwC+iY7RGsKgANOl6cKB</value>
															</Id>
															<Icon classname='Str'>
																<value>Measurement\Measurement.ico</value>
															</Icon>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>1</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>4</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
													<Measurement classname='Obj'>
														<subprops>
															<Name classname='Str'>
																<value>NIDCPowerPPS_LabVIEW</value>
															</Name>
															<Parameters classname='Objs'>
																<value lbound='[0]' ubound='[9]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='Obj'>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value/>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value/>
																				</Direction>
																				<Log classname='Bool'>
																					<value>false</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value/>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>0</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value/>
																				</TypeSpecialization>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>Pin Name</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>"Pin1"</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeString</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>1</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>Pin</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>Voltage Level (V)</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>2</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>2</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>Voltage Level Range (V)</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>6</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>3</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>Current Limit (A)</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>0.01</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>4</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>Current Limit Range (A)</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>0.01</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>5</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>Source Delay (s)</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>0.1</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>6</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>Voltage Measurement (V)</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>1</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>Current Measurement (A)</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>2</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>In Compliance</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeBool</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>3</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>Measured Power (W)</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>4</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																</value>
															</Parameters>
														</subprops>
													</Measurement>
												</subprops>
											</Step>
										</value>
									</value>
								</Main>
								<Setup classname='Objs' valueflags='4194304'>
									<value lbound='[0]' ubound='[1]'>
										<value>
											<Step typename='NI_UpdatePinMap' xsi:type='NI_UpdatePinMap' name='Update pin map'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:vcxIwASW7hGxGVAoSqomQC</value>
															</Id>
															<Icon classname='Str'>
																<value>NI_SequenceEditor\StepSettings\ni_UpdateMapping.ico</value>
															</Icon>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>0</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>4</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanSpecifyModule classname='Bool'>
																<value>true</value>
															</CanSpecifyModule>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
													<PinMapPath classname='PathValue'>
														<value>@"..\..\..\src\NIDCPowerPPS\NIDCPowerPPS.pinmap"</value>
													</PinMapPath>
												</subprops>
											</Step>
										</value>
										<value>
											<Step typename='Action' xsi:type='Action' name='Initialize and register NI-DCPower Sessions'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:2d1ji6jd7RGiN0xEW1WgXC</value>
															</Id>
															<Icon classname='Str'>
																<value/>
															</Icon>
															<SData typename='FlexGStepAdditions' xsi:type='FlexGStepAdditions' classname='FGModule'>
																<subprops>
																	<ViCall classname='VICall'>
																		<subprops>
																			<CallType classname='Num'>
																				<value>0</value>
																			</CallType>
																			<ClassPath classname='PathValue'>
																				<value/>
																			</ClassPath>
																			<ProjectPath classname='PathValue'>
																				<value>..\..\..\src\NIDCPowerPPS\NIDCPowerPPS.lvproj</value>
																			</ProjectPath>
																			<RemoteProjectPath classname='PathValue'>
																				<value/>
																			</RemoteProjectPath>
																			<VIPath classname='PathValue'>
																				<value>My Computer\NIDCPowerPPS.lvlib\TestStand Code Modules\Initialize and Register Sessions.vi</value>
																			</VIPath>
																			<Namespace classname='Str'>
																				<value>NIDCPowerPPS.lvlib</value>
																			</Namespace>
																			<RemoteVIPath classname='PathValue'>
																				<value/>
																			</RemoteVIPath>
																			<CallName classname='Str'>
																				<value/>
																			</CallName>
																			<VIType classname='Num'>
																				<value>0</value>
																			</VIType>
																			<ShowFrnPnl classname='Bool'>
																				<value>false</value>
																			</ShowFrnPnl>
																			<VIDescription classname='Str'>
																				<value/>
																			</VIDescription>
																			<TDChecksum classname='Num'>
																				<value>1647506694</value>
																			</TDChecksum>
																			<NodeLibraryName classname='Str'>
																				<value/>
																			</NodeLibraryName>
																			<NodeLibraryGenericTypeName classname='Str'>
																				<value/>
																			</NodeLibraryGenericTypeName>
																			<NodeClassDataName classname='Str'>
																				<value/>
																			</NodeClassDataName>
																			<NodeUsesDataValueReference classname='Bool'>
																				<value>false</value>
																			</NodeUsesDataValueReference>
																			<NodeIgnoresInternalErrors classname='Bool'>
																				<value>false</value>
																			</NodeIgnoresInternalErrors>
																			<NodeOperationMode classname='Num'>
																				<value>0</value>
																			</NodeOperationMode>
																			<AutoDetectLVRT classname='Bool'>
																				<value>false</value>
																			</AutoDetectLVRT>
																			<RemoteHost classname='ExprValue'>
																				<value/>
																			</RemoteHost>
																			<RemoteHostByExpr classname='Bool'>
																				<value>false</value>
																			</RemoteHostByExpr>
																			<PrototypeFlags classname='Num'>
																				<value>0</value>
																			</PrototypeFlags>
																			<VI classname='Str'>
																				<value/>
																			</VI>
																			<OverrideBinaryClassPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryClassPath>
																			<OverrideBinaryVIPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryVIPath>
																			<OverrideBinaryProjectPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryProjectPath>
																			<OverrideBinaryNamespace classname='Str'>
																				<value/>
																			</OverrideBinaryNamespace>
																			<OverrideModuleOptions classname='Num'>
																				<value>0</value>
																			</OverrideModuleOptions>
																			<BuildSpecificationName classname='Str'>
																				<value/>
																			</BuildSpecificationName>
																			<OverrideBinaryVIChecksum classname='Num'>
																				<value>-1</value>
																			</OverrideBinaryVIChecksum>
																			<ArrayParametersMatchLVArrayDimenions classname='Bool'>
																				<value>false</value>
																			</ArrayParametersMatchLVArrayDimenions>
																			<Parms classname='Objs'>
																				<value lbound='[0]' ubound='[2]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='VIParameter' structureflags='0'/>
																					</elemproto>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='sequence context'>
																							<subprops>
																								<Label classname='Str'>
																									<value>sequence context</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value>ThisContext</value>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>4</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>0</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Object Reference</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>false</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[]'/>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>0</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>11</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>0</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error in'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error in</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value/>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>true</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>False</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>0</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>""</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>0</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>8</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>0</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error out'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error out</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value>Step.Result.Error</value>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>false</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Occurred</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Code</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Msg</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>1</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>0</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>2</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																				</value>
																			</Parms>
																			<NodeProperties classname='Objs'>
																				<value lbound='[0]' ubound='[]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='LVNodeProperty' structureflags='0'/>
																					</elemproto>
																				</value>
																			</NodeProperties>
																		</subprops>
																	</ViCall>
																</subprops>
															</SData>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>0</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>0</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanSpecifyModule classname='Bool'>
																<value>true</value>
															</CanSpecifyModule>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
												</subprops>
											</Step>
										</value>
									</value>
								</Setup>
								<Cleanup classname='Objs' valueflags='4194304'>
									<value lbound='[0]' ubound='[0]'>
										<value>
											<Step typename='Action' xsi:type='Action' name='Unregister and close NI-DCPower sessions'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:mOwxmKjd7RGiN0xEW1WgXC</value>
															</Id>
															<Icon classname='Str'>
																<value/>
															</Icon>
															<SData typename='FlexGStepAdditions' xsi:type='FlexGStepAdditions' classname='FGModule'>
																<subprops>
																	<ViCall classname='VICall'>
																		<subprops>
																			<CallType classname='Num'>
																				<value>0</value>
																			</CallType>
																			<ClassPath classname='PathValue'>
																				<value/>
																			</ClassPath>
																			<ProjectPath classname='PathValue'>
																				<value>..\..\..\src\NIDCPowerPPS\NIDCPowerPPS.lvproj</value>
																			</ProjectPath>
																			<RemoteProjectPath classname='PathValue'>
																				<value/>
																			</RemoteProjectPath>
																			<VIPath classname='PathValue'>
																				<value>My Computer\NIDCPowerPPS.lvlib\TestStand Code Modules\Unregister and Close Sessions.vi</value>
																			</VIPath>
																			<Namespace classname='Str'>
																				<value>NIDCPowerPPS.lvlib</value>
																			</Namespace>
																			<RemoteVIPath classname='PathValue'>
																				<value/>
																			</RemoteVIPath>
																			<CallName classname='Str'>
																				<value/>
																			</CallName>
																			<VIType classname='Num'>
																				<value>0</value>
																			</VIType>
																			<ShowFrnPnl classname='Bool'>
																				<value>false</value>
																			</ShowFrnPnl>
																			<VIDescription classname='Str'>
																				<value/>
																			</VIDescription>
																			<TDChecksum classname='Num'>
																				<value>1801503858</value>
																			</TDChecksum>
																			<NodeLibraryName classname='Str'>
																				<value/>
																			</NodeLibraryName>
																			<NodeLibraryGenericTypeName classname='Str'>
																				<value/>
																			</NodeLibraryGenericTypeName>
																			<NodeClassDataName classname='Str'>
																				<value/>
																			</NodeClassDataName>
																			<NodeUsesDataValueReference classname='Bool'>
																				<value>false</value>
																			</NodeUsesDataValueReference>
																			<NodeIgnoresInternalErrors classname='Bool'>
																				<value>false</value>
																			</NodeIgnoresInternalErrors>
																			<NodeOperationMode classname='Num'>
																				<value>0</value>
																			</NodeOperationMode>
																			<AutoDetectLVRT classname='Bool'>
																				<value>false</value>
																			</AutoDetectLVRT>
																			<RemoteHost classname='ExprValue'>
																				<value/>
																			</RemoteHost>
																			<RemoteHostByExpr classname='Bool'>
																				<value>false</value>
																			</RemoteHostByExpr>
																			<PrototypeFlags classname='Num'>
																				<value>0</value>
																			</PrototypeFlags>
																			<VI classname='Str'>
																				<value/>
																			</VI>
																			<OverrideBinaryClassPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryClassPath>
																			<OverrideBinaryVIPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryVIPath>
																			<OverrideBinaryProjectPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryProjectPath>
																			<OverrideBinaryNamespace classname='Str'>
																				<value/>
																			</OverrideBinaryNamespace>
																			<OverrideModuleOptions classname='Num'>
																				<value>0</value>
																			</OverrideModuleOptions>
																			<BuildSpecificationName classname='Str'>
																				<value/>
																			</BuildSpecificationName>
																			<OverrideBinaryVIChecksum classname='Num'>
																				<value>-1</value>
																			</OverrideBinaryVIChecksum>
																			<ArrayParametersMatchLVArrayDimenions classname='Bool'>
																				<value>false</value>
																			</ArrayParametersMatchLVArrayDimenions>
																			<Parms classname='Objs'>
																				<value lbound='[0]' ubound='[1]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='VIParameter' structureflags='0'/>
																					</elemproto>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error in'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error in</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value/>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>true</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>False</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>0</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>""</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>0</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>8</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>0</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error out'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error out</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value>Step.Result.Error</value>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>false</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Occurred</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Code</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Msg</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>1</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>0</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>2</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																				</value>
																			</Parms>
																			<NodeProperties classname='Objs'>
																				<value lbound='[0]' ubound='[]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='LVNodeProperty' structureflags='0'/>
																					</elemproto>
																				</value>
																			</NodeProperties>
																		</subprops>
																	</ViCall>
																</subprops>
															</SData>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>0</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>0</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanSpecifyModule classname='Bool'>
																<value>true</value>
															</CanSpecifyModule>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
												</subprops>
											</Step>
										</value>
									</value>
								</Cleanup>
								<RecordResults classname='Bool' valueflags='4194312'>
									<value>true</value>
								</RecordResults>
								<RTS classname='Obj' valueflags='4456456'>
									<subprops>
										<Type classname='Num' valueflags='4194304'>
											<value>0</value>
										</Type>
										<OptimizeNonReentrantCalls classname='Bool' valueflags='4194304'>
											<value>true</value>
										</OptimizeNonReentrantCalls>
										<EPNameExpr classname='Str' valueflags='4194304'>
											<value>"Unnamed Entry Point"</value>
										</EPNameExpr>
										<EPEnabledExpr classname='Str' valueflags='4194304'>
											<value>True</value>
										</EPEnabledExpr>
										<EPMenuHint classname='Str' valueflags='4194304'>
											<value/>
										</EPMenuHint>
										<EPIgnoreClient classname='Bool' valueflags='4194304'>
											<value>false</value>
										</EPIgnoreClient>
										<EPInitiallyHidden classname='Bool' valueflags='4194304'>
											<value>false</value>
										</EPInitiallyHidden>
										<EPCheckToSaveTitledFile classname='Bool' valueflags='4194304'>
											<value>true</value>
										</EPCheckToSaveTitledFile>
										<ShowEPAlways classname='Bool' valueflags='4194304'>
											<value>false</value>
										</ShowEPAlways>
										<ShowEPForFileWin classname='Bool' valueflags='4194304'>
											<value>true</value>
										</ShowEPForFileWin>
										<ShowEPForExeWin classname='Bool' valueflags='4194304'>
											<value>false</value>
										</ShowEPForExeWin>
										<ShowEPForEditorOnly classname='Bool' valueflags='4194304'>
											<value>false</value>
										</ShowEPForEditorOnly>
										<AllowIntExeOfEP classname='Bool' valueflags='4194304'>
											<value>false</value>
										</AllowIntExeOfEP>
										<CopyStepsOnOverriding classname='Bool' valueflags='4194304'>
											<value>true</value>
										</CopyStepsOnOverriding>
										<Priority classname='Num' valueflags='4194304'>
											<value>2953567917</value>
										</Priority>
									</subprops>
								</RTS>
								<Requirements classname='Obj' valueflags='4456456'>
									<subprops>
										<Links classname='Strs' valueflags='71303168'>
											<value lbound='[0]' ubound='[]'/>
										</Links>
									</subprops>
								</Requirements>
								<FailureAction classname='Num' valueflags='4194312'>
									<value>2</value>
								</FailureAction>
							</subprops>
						</Sequence>
					</value>
				</value>
			</Seq>
			<FileGlobalDefaults classname='Obj' valueflags='4194304'>
				<subprops>
					<MeasurementLink classname='Obj'>
						<subprops>
							<EnableMonitoring classname='Bool'>
								<value>false</value>
							</EnableMonitoring>
						</subprops>
					</MeasurementLink>
				</subprops>
			</FileGlobalDefaults>
			<ModelFile typename='Path' xsi:type='Path' classname='PathValue' valueflags='4194312'>
				<value/>
			</ModelFile>
			<LoadOpt classname='Str' valueflags='4194312'>
				<value>UseStepLoadOpt</value>
			</LoadOpt>
			<UnloadOpt classname='Str' valueflags='4194312'>
				<value>UseStepUnloadOpt</value>
			</UnloadOpt>
			<Version classname='Str' valueflags='4194312'>
				<value>0.0.0.0</value>
			</Version>
			<BatchSync classname='Num' valueflags='4194312'>
				<value>1</value>
			</BatchSync>
			<SFGlobalsScope classname='Num' valueflags='4194312'>
				<value>0</value>
			</SFGlobalsScope>
			<Type classname='Num' valueflags='4194312'>
				<value>0</value>
			</Type>
			<ModelOption classname='Num' valueflags='4194312'>
				<value>0</value>
			</ModelOption>
			<Requirements classname='Obj' valueflags='4194305'>
				<subprops>
					<Links classname='Strs' valueflags='71303168'>
						<value lbound='[0]' ubound='[]'/>
					</Links>
				</subprops>
			</Requirements>
		</subprops>
	</Data>
</teststandfileheader>
